<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_uPyX8HStEe6vtI5bcBbkXg" name="Risk">
    <eAnnotations xmi:id="_uW3QUHStEe6vtI5bcBbkXg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_uW3QUXStEe6vtI5bcBbkXg" source="codegen">
        <details xmi:id="_uW3QUnStEe6vtI5bcBbkXg" key="codegenDirectory" value="/Risk/src"/>
        <details xmi:id="_wBSx0HStEe6vtI5bcBbkXg" key="AssociatedSourceCode" value="/Risk/src/risk/MainForTesting.java;472339042/1;/Risk/src/risk/Risk.java;2759755036/1;/Risk/src/risk/controler/ConnexionDB.java;3855881580/1;/Risk/src/risk/model/Archive_Attaque.java;693010523/1;/Risk/src/risk/model/Archive_Conflit.java;2028986565/1;/Risk/src/risk/model/Archive_Defense.java;3739740377/1;/Risk/src/risk/model/Carte.java;1498227525/1;/Risk/src/risk/model/Chronometre.java;2285213809/1;/Risk/src/risk/model/Conflit.java;3140135739/1;/Risk/src/risk/model/Continent.java;1736089149/1;/Risk/src/risk/model/Equipe.java;3099953587/1;/Risk/src/risk/model/HistoriqueJoueurs.java;1905189082/1;/Risk/src/risk/model/Joueur.java;322183916/1;/Risk/src/risk/model/LancerDes.java;4050013278/1;/Risk/src/risk/model/Manche.java;1432153003/1;/Risk/src/risk/model/Mission.java;2000965445/1;/Risk/src/risk/model/Monde.java;1500372889/1;/Risk/src/risk/model/Regiment.java;137410672/1;/Risk/src/risk/model/Territoire.java;3988007726/1;/Risk/src/risk/model/Tour.java;220324493/1;/Risk/src/risk/model/TypeRegiment.java;3505944366/1;/Risk/src/risk/vue/Fenetre.java;2261682629/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_usQRgHStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_usQ4kHStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_usQ4kXStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_usQ4knStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_usQ4k3StEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_usQ4lHStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_usQ4lXStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_usQ4lnStEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_usQ4l3StEe6vtI5bcBbkXg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_usStwHStEe6vtI5bcBbkXg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_usStwXStEe6vtI5bcBbkXg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_usxO4HStEe6vtI5bcBbkXg" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_uxeIsHStEe6vtI5bcBbkXg" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_us8OAnStEe6vtI5bcBbkXg" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_uxn5s3StEe6vtI5bcBbkXg" name="CountDownLatch"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxOREHStEe6vtI5bcBbkXg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxO4IXStEe6vtI5bcBbkXg" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxPfMXStEe6vtI5bcBbkXg" name="Random"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uxQGQHStEe6vtI5bcBbkXg" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxQtUHStEe6vtI5bcBbkXg" name="HashMap"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_uxQtUnStEe6vtI5bcBbkXg" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uxQtVHStEe6vtI5bcBbkXg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxRUYXStEe6vtI5bcBbkXg" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uxRUY3StEe6vtI5bcBbkXg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxWz9nStEe6vtI5bcBbkXg" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxXbAXStEe6vtI5bcBbkXg" name="TimerTask"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxfW0XStEe6vtI5bcBbkXg" name="Arrays"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_usW_MHStEe6vtI5bcBbkXg" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_uxy40HStEe6vtI5bcBbkXg" name="Connection"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_uxzf4HStEe6vtI5bcBbkXg" name="Date"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_usW_MXStEe6vtI5bcBbkXg" name="time">
        <packagedElement xmi:type="uml:Class" xmi:id="_uxR7cXStEe6vtI5bcBbkXg" name="LocalDate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_usxO4XStEe6vtI5bcBbkXg" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_uxevwXStEe6vtI5bcBbkXg" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_us8OAHStEe6vtI5bcBbkXg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_us8OAXStEe6vtI5bcBbkXg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_uxnSpXStEe6vtI5bcBbkXg" name="MouseEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_uxn5sXStEe6vtI5bcBbkXg" name="MouseListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxmrkHStEe6vtI5bcBbkXg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxnSoXStEe6vtI5bcBbkXg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uxnSo3StEe6vtI5bcBbkXg" name="FlowLayout"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_usStwnStEe6vtI5bcBbkXg" name="risk">
      <packagedElement xmi:type="uml:Package" xmi:id="_usStw3StEe6vtI5bcBbkXg" name="model">
        <packagedElement xmi:type="uml:Class" xmi:id="_utUogHStEe6vtI5bcBbkXg" name="Archive_Attaque">
          <ownedComment xmi:id="_uyjGwXStEe6vtI5bcBbkXg">
            <body> CLASSE ATTAQUE **** QUIPROQUO *** CLASSE PAS UTILISEE</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyDXgXStEe6vtI5bcBbkXg" name="attaquant" visibility="private" type="_utp_sXStEe6vtI5bcBbkXg" association="_uyqbg3StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyDXg3StEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyqbhnStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyD-kHStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyrCkXStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyD-kXStEe6vtI5bcBbkXg" name="nbRegimentAttaquant" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyD-knStEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyrClHStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybK93StEe6vtI5bcBbkXg" name="Archive_Attaque" specification="_uxSigHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybK-HStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybK-XStEe6vtI5bcBbkXg" type="_utUogHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>// TODO Auto-generated constructor stub
		this.attaquant=attaquant;
		this.territoireAttaquant=choisirTerritoirePartir(attaquant);
		int nbTerritoireAttaquantable=territoireAttaquant.getNbRegiments()-1;
		this.nbRegimentAttaquant=choisirnbRegimentAttaquant(nbTerritoireAttaquantable);
		this.territoireDefenseur=choisirTerritoireDefenseur(territoireAttaquant);
		this.desAttaque=desAttaquer(nbRegimentAttaquant);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybK-nStEe6vtI5bcBbkXg" name="choisirTerritoirePartir" specification="_uxTJkHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybK-3StEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybK_HStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Territoire> allTerritoires = new ArrayList&lt;>();
		allTerritoires=attaquant.getAllTerritoires();
	    // 显示可选的Territoire列表
	    System.out.println(&quot;Veuille choisir une territoire：&quot;);
	    for (int i = 0; i &lt; allTerritoires.size(); i++) {
	        System.out.println((i + 1) + &quot;. &quot; + allTerritoires.get(i).getNom()); // 假设Territoire有一个getNom()方法来获取名称
	    }

	    // 获取玩家的选择
	    Scanner scanner = new Scanner(System.in);
	    int choix = scanner.nextInt();
	    return allTerritoires.get(choix - 1); // 减去1以获取正确的索引

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybK_XStEe6vtI5bcBbkXg" name="choisirnbRegimentAttaquant" specification="_utV2oHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybK_nStEe6vtI5bcBbkXg" name="nbTerritoireAttaquantable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybK_3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int choix;
		Scanner scanner = new Scanner(System.in);
		if(nbTerritoireAttaquantable>=3) {
			System.out.println(&quot;Veuillez entrer le nombre de troupes que vous souhaitez déployer, veuillez saisir un chiffre inférieur à 3.&quot;);
			choix = scanner.nextInt();
			while(choix>3 || choix&lt;1 ) {
				System.out.println(&quot;Veuillez saisir à nouveau.&quot;);
				choix = scanner.nextInt();
			}
		}
		else {
			System.out.println(&quot;Veuillez entrer le nombre de troupes que vous souhaitez déployer, veuillez saisir un chiffre inférieur à &quot;+nbTerritoireAttaquantable+&quot;.&quot;);
			choix = scanner.nextInt();
			while(choix> nbTerritoireAttaquantable || choix&lt;1 ) {
				System.out.println(&quot;Veuillez saisir à nouveau.&quot;);
				choix = scanner.nextInt();
			}
		}
		return choix;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybLAHStEe6vtI5bcBbkXg" name="choisirTerritoireDefenseur" specification="_uxTJk3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybLAXStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybLAnStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Territoire> voisins= new ArrayList&lt;>();
		voisins=territoireAttaquant.getVoisins();
		System.out.println(&quot;Veuillez sélectionner le pays que vous souhaitez attaquer.&quot;);
	    for (int i = 0; i &lt; voisins.size(); i++) {
	        System.out.println((i + 1) + &quot;. &quot; + voisins.get(i).getNom()); // 假设Territoire有一个getNom()方法来获取名称
	    }
	    // 获取玩家的选择
	    Scanner scanner = new Scanner(System.in);
	    int choix = scanner.nextInt();

	    return voisins.get(choix - 1); 
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybLA3StEe6vtI5bcBbkXg" name="desAttaquer" specification="_utV2o3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybLBHStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybLBXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Integer> resultats = new ArrayList&lt;>();

     for (int i = 0; i &lt; nbRegimentAttaquant; i++) {
     	LancerDes lancerDes=new LancerDes();
         int resultat = lancerDes.getResultatDes();
         resultats.add(resultat);
     }

     return resultats;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utV2oHStEe6vtI5bcBbkXg" name="choisirnbRegimentAttaquant" visibility="private" method="_uybK_XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utV2oXStEe6vtI5bcBbkXg" name="nbTerritoireAttaquantable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utV2onStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utV2o3StEe6vtI5bcBbkXg" name="desAttaquer" method="_uybLA3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utV2pHStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux0G8HStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxSigHStEe6vtI5bcBbkXg" name="Archive_Attaque" method="_uybK93StEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxSignStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxSig3StEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxSigXStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxSihHStEe6vtI5bcBbkXg" type="_utUogHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxTJkHStEe6vtI5bcBbkXg" name="choisirTerritoirePartir" visibility="private" method="_uybK-nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxTJkXStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxTJknStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxTJk3StEe6vtI5bcBbkXg" name="choisirTerritoireDefenseur" visibility="private" method="_uybLAHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxTJlHStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxTJlXStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utY58HStEe6vtI5bcBbkXg" name="Archive_Conflit">
          <ownedAttribute xmi:id="_uyEloHStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyrCl3StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyEloXStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyrpoXStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyElonStEe6vtI5bcBbkXg" name="desAttaque" visibility="private" type="_uxOREHStEe6vtI5bcBbkXg" association="_uyrppHStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyElpXStEe6vtI5bcBbkXg" name="desDefense" visibility="private" type="_uxOREHStEe6vtI5bcBbkXg" association="_uyrpp3StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyFMsnStEe6vtI5bcBbkXg" name="succes" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyFMtHStEe6vtI5bcBbkXg" name="tour" visibility="private" type="_ut-IwHStEe6vtI5bcBbkXg" association="_uysQsXStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybLBnStEe6vtI5bcBbkXg" name="Archive_Conflit" specification="_uxTwoHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybLB3StEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybLCHStEe6vtI5bcBbkXg" name="defense" type="_utckUHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybLCXStEe6vtI5bcBbkXg" type="_utY58HStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.tour=tour;
		Archive_Attaque attaque=defense.getAttaque();
		Territoire territoireAttaquant=attaque.getTerritoireAttaquant();
		Territoire territoireDefenseur=attaque.getTerritoireDefenseur();
		ArrayList&lt;Integer> desAttaque=attaque.getDesAttaque();
		ArrayList&lt;Integer> desDefense=defense.getDesDefense();
		this.desAttaque=trierDesAttaqueAvecRetour(desAttaque);
		this.desDefense=trierDesAttaqueAvecRetour(desDefense);
		int nbSuivivant=ResultConflit(territoireAttaquant, territoireDefenseur, desAttaque, desDefense) ;
		succes=reglementDefaite(territoireAttaquant, territoireDefenseur,nbSuivivant);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybLCnStEe6vtI5bcBbkXg" name="trierDesAttaqueAvecRetour" specification="_ux1VEHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybLC3StEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybLDHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>// 创建一个新的ArrayList并进行排序
	    ArrayList&lt;Integer> sortedDesAttaque = new ArrayList&lt;>(desAttaque);
	    Collections.sort(sortedDesAttaque, Collections.reverseOrder());
	    return sortedDesAttaque;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyAHStEe6vtI5bcBbkXg" name="ResultConflit" specification="_ux18InStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyAXStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyAnStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyA3StEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyBHStEe6vtI5bcBbkXg" name="desDefense" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyBXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>// 循环比较desDefense的长度次
	    int iterations = desDefense.size();
	    int nbSurvivant = desAttaque.size();
	    for (int i = 0; i &lt; iterations; i++) {
	        int attaque = desAttaque.get(i);
	        int defense = desDefense.get(i);

	        // 如果desAttaque的值大于desDefense，则territoireDefenseur上的兵数减去1
	        if (attaque > defense) {
	            int nbRegimentsDefenseur = territoireDefenseur.getNbRegiments();
	            if (nbRegimentsDefenseur > 0) {
	                territoireDefenseur.setNbRegiments(nbRegimentsDefenseur - 1);
	            }
	        } else {
	            // 否则territoireAttaquant上的兵数减去1
	            int nbRegimentsAttaquant = territoireAttaquant.getNbRegiments();
	            if (nbRegimentsAttaquant > 0) {
	                territoireAttaquant.setNbRegiments(nbRegimentsAttaquant - 1);
	            }
	            nbSurvivant=nbSurvivant-1;
	        }
	    }
	    return nbSurvivant;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyBnStEe6vtI5bcBbkXg" name="reglementDefaite" specification="_uxUXsHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyB3StEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyCHStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyCXStEe6vtI5bcBbkXg" name="nbSuivivant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyCnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if(territoireDefenseur.getNbRegiments()==0) {
			elimination (territoireAttaquant, territoireDefenseur);
			territoireDefenseur.getOccupant().supprimerTerritoiresConquis(territoireDefenseur);
			territoireAttaquant.getOccupant().ajouterTerritoiresConquis(territoireDefenseur);
			territoireDefenseur.setOccupant(territoireAttaquant.getOccupant());
			territoireDefenseur.setNbRegiments(nbSuivivant);
			return 1;
		}
		else {
			return 0;
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyC3StEe6vtI5bcBbkXg" name="elimination" specification="_uxUXtXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyDHStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyDXStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>ArrayList &lt;Territoire> tousTerritoireDefenseur=new ArrayList &lt;Territoire>();
		tousTerritoireDefenseur=territoireDefenseur.getOccupant().getAllTerritoires();
		ArrayList &lt;Territoire> tousterritoireAttaquant=new ArrayList &lt;Territoire>();
		tousterritoireAttaquant=territoireAttaquant.getOccupant().getAllTerritoires();
		if(tousTerritoireDefenseur.size()==0) {
			this.tour.getManche().addClassement(territoireDefenseur.getOccupant());
			this.tour.getManche().addVaincre(territoireDefenseur.getOccupant(),territoireAttaquant.getOccupant());
			if(this.tour.getManche().getClassementLength() ==6) {
				this.tour.getManche().setEstTerminee(true);
			}
		}
			
	
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uxTwoHStEe6vtI5bcBbkXg" name="Archive_Conflit" method="_uybLBnStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxTwo3StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxTwpHStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxTwoXStEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxTwonStEe6vtI5bcBbkXg" name="defense" type="_utckUHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxTwpXStEe6vtI5bcBbkXg" type="_utY58HStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxUXsHStEe6vtI5bcBbkXg" name="reglementDefaite" visibility="private" method="_uybyBnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxUXsXStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxUXsnStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxUXs3StEe6vtI5bcBbkXg" name="nbSuivivant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxUXtHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxUXtXStEe6vtI5bcBbkXg" name="elimination" visibility="private" method="_uybyC3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxUXtnStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxUXt3StEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ux1VEHStEe6vtI5bcBbkXg" name="trierDesAttaqueAvecRetour" visibility="private" method="_uybLCnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux1VEXStEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux18IHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ux18InStEe6vtI5bcBbkXg" name="ResultConflit" visibility="private" method="_uybyAHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux18I3StEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux18JHStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux18JXStEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux18JnStEe6vtI5bcBbkXg" name="desDefense" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux2jMHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utckUHStEe6vtI5bcBbkXg" name="Archive_Defense">
          <ownedComment xmi:id="_uyjGwnStEe6vtI5bcBbkXg">
            <body> CLASSE DEFENSE **** QUIPROQUO *** CLASSE PAS UTILISEE</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyFMtnStEe6vtI5bcBbkXg" name="attaque" type="_utUogHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uysQtHStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyFMt3StEe6vtI5bcBbkXg" name="territoireDefenseur" visibility="private" type="_ut7FcHStEe6vtI5bcBbkXg" association="_uys3wXStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyFzwXStEe6vtI5bcBbkXg" name="defense" visibility="private" type="_utp_sXStEe6vtI5bcBbkXg" association="_uys3xHStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyFzw3StEe6vtI5bcBbkXg" name="nbRegimentDefenseur" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyFzxXStEe6vtI5bcBbkXg" name="desDefense" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uys3x3StEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyDnStEe6vtI5bcBbkXg" name="Archive_Defense" specification="_uxVl0HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyD3StEe6vtI5bcBbkXg" name="attaque" type="_utUogHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyEHStEe6vtI5bcBbkXg" type="_utckUHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>// TODO Auto-generated constructor stub
		this.territoireDefenseur=attaque.getTerritoireDefenseur();
		int nbRegimentAttaquant=attaque.getNbRegimentAttaquant();
		this.defense=territoireDefenseur.getOccupant();
		int nbTerritoireDefenseurable=territoireDefenseur.getNbRegiments();
		this.nbRegimentDefenseur=choisirnbRegimentDefenseur(nbTerritoireDefenseurable, nbRegimentAttaquant);
		this.desDefense=desDefense(nbRegimentDefenseur);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyEXStEe6vtI5bcBbkXg" name="choisirnbRegimentDefenseur" specification="_utdLYHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyEnStEe6vtI5bcBbkXg" name="nbTerritoireDefenseurable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyE3StEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyFHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int nbTerritoireDefenseurable2= nbTerritoireDefenseurable2(nbRegimentAttaquant);
		return Math.min(nbTerritoireDefenseurable2, nbTerritoireDefenseurable);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyFXStEe6vtI5bcBbkXg" name="nbTerritoireDefenseurable2" specification="_utdycHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyFnStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyF3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (nbRegimentAttaquant == 3) {
		        return 2;
		    } else {
		        return nbRegimentAttaquant;
		    }
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyGHStEe6vtI5bcBbkXg" name="desDefense" specification="_utdyc3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyGXStEe6vtI5bcBbkXg" name="nbRegimentDefenseur">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyGnStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Integer> resultats = new ArrayList&lt;>();

     for (int i = 0; i &lt; nbRegimentDefenseur; i++) {
     	LancerDes lancerDes=new LancerDes();
         int resultat = lancerDes.getResultatDes();
         resultats.add(resultat);
     }

     return resultats;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utdLYHStEe6vtI5bcBbkXg" name="choisirnbRegimentDefenseur" visibility="private" method="_uybyEXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utdLYXStEe6vtI5bcBbkXg" name="nbTerritoireDefenseurable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utdLYnStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utdLY3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utdycHStEe6vtI5bcBbkXg" name="nbTerritoireDefenseurable2" visibility="private" method="_uybyFXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utdycXStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utdycnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utdyc3StEe6vtI5bcBbkXg" name="desDefense" method="_uybyGHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utdydHStEe6vtI5bcBbkXg" name="nbRegimentDefenseur">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux3KQHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxVl0HStEe6vtI5bcBbkXg" name="Archive_Defense" method="_uybyDnStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxVl0nStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxVl03StEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxVl0XStEe6vtI5bcBbkXg" name="attaque" type="_utUogHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxVl1HStEe6vtI5bcBbkXg" type="_utckUHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utfnoHStEe6vtI5bcBbkXg" name="Carte">
          <ownedAttribute xmi:id="_uyGa0HStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyte0XStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyGa0XStEe6vtI5bcBbkXg" name="typeRegiment" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyG3StEe6vtI5bcBbkXg" name="Carte" specification="_uxWz8HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyHHStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uybyHXStEe6vtI5bcBbkXg" name="typeRegiment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybyHnStEe6vtI5bcBbkXg" type="_utfnoHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.territoire = territoire;
     this.typeRegiment = typeRegiment;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybyH3StEe6vtI5bcBbkXg" name="toString" specification="_utgOsHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybyIHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;|RISK| Territoire : &quot; + this.territoire + &quot;, Type de Régiment : &quot; + this.typeRegiment;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utgOsHStEe6vtI5bcBbkXg" name="toString" method="_uybyH3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utgOsXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxWz8HStEe6vtI5bcBbkXg" name="Carte" method="_uybyG3StEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxWz83StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxWz9HStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxWz8XStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxWz8nStEe6vtI5bcBbkXg" name="typeRegiment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxWz9XStEe6vtI5bcBbkXg" type="_utfnoHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utg1wHStEe6vtI5bcBbkXg" name="Chronometre">
          <ownedAttribute xmi:id="_uyGa0nStEe6vtI5bcBbkXg" name="timer" visibility="private" type="_uxWz9nStEe6vtI5bcBbkXg" association="_uyte1HStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyGa1HStEe6vtI5bcBbkXg" name="tempsEcoule" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyGa1XStEe6vtI5bcBbkXg" name="actif" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZEHStEe6vtI5bcBbkXg" name="Chronometre" specification="_utg1wXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZEXStEe6vtI5bcBbkXg" type="_utg1wHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.timer = new Timer();
     this.tempsEcoule = 0;
     this.actif = false;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZEnStEe6vtI5bcBbkXg" name="demarrerChronometre" specification="_utg1xXStEe6vtI5bcBbkXg">
            <language>java</language>
            <body>// Si le chronometre n'a pas encore été lancé on le lance
 	if (!actif) {
	        int delai = 1000; // Ici, 1000 ms = 1 sec
	
	        TimerTask tache = new TimerTask() {
	            @Override
	            public void run() {
	                tempsEcoule++;
//	                System.out.println(&quot;Temps écoulé : &quot; + tempsEcoule + &quot; secondes&quot;);
	            }
	        };
	        // Mise à jour du timer toutes les secondes
	        timer.scheduleAtFixedRate(tache, delai, delai);
	        // Mise à jour du statut du chronometre
	        actif = true;
 	}
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZE3StEe6vtI5bcBbkXg" name="arreterChronometre" specification="_utg1xnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZFHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (actif) {
     	// Stopper le chronomètre
         timer.cancel(); 
         actif = false;
     }
     return tempsEcoule;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZFXStEe6vtI5bcBbkXg" name="isActif" specification="_uthc0XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZFnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return actif;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utg1wXStEe6vtI5bcBbkXg" name="Chronometre" method="_uycZEHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_utg1wnStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_utg1w3StEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_utg1xHStEe6vtI5bcBbkXg" type="_utg1wHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utg1xXStEe6vtI5bcBbkXg" name="demarrerChronometre" method="_uycZEnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjGw3StEe6vtI5bcBbkXg">
              <body>Demarre le chronometre des secondes</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_utg1xnStEe6vtI5bcBbkXg" name="arreterChronometre" method="_uycZE3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjGxHStEe6vtI5bcBbkXg">
              <body>Arrete le chronometre des secondes
     * @return Temps écoulé en secondes</body>
            </ownedComment>
            <ownedParameter xmi:id="_uthc0HStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uthc0XStEe6vtI5bcBbkXg" name="isActif" method="_uycZFXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjGxXStEe6vtI5bcBbkXg">
              <body>Consultation du statut du chronometre 
     * @return statut actif ou non actif sous forme de booleen (actif : vrai ou faux)</body>
            </ownedComment>
            <ownedParameter xmi:id="_uthc0nStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utiD4HStEe6vtI5bcBbkXg" name="Conflit">
          <ownedComment xmi:id="_uyjGxnStEe6vtI5bcBbkXg">
            <body>Class Clonflit Ã  jour
Archive (version scanner => old version)
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyHB4HStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyuF4HStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyHB4XStEe6vtI5bcBbkXg" name="defenseur" type="_utp_sXStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyuF43StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyHB4nStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyus8HStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyHB43StEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyus83StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyHB5HStEe6vtI5bcBbkXg" name="nbRegimentAttaquant" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyHB5XStEe6vtI5bcBbkXg" name="nbRegimentDefenseur" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyHB5nStEe6vtI5bcBbkXg" name="desAttaque" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyus9nStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyHo8XStEe6vtI5bcBbkXg" name="desDefense" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyvUAXStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZF3StEe6vtI5bcBbkXg" name="Conflit" specification="_uxYpIHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZGHStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uycZGXStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uycZGnStEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uycZG3StEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uycZHHStEe6vtI5bcBbkXg" type="_utiD4HStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.attaquant = attaquant;
		this.territoireAttaquant = territoireAttaquant;
		this.territoireDefenseur = territoireDefenseur;
		this.nbRegimentAttaquant = nbRegimentAttaquant;
		this.defenseur = territoireDefenseur.getOccupant();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZHXStEe6vtI5bcBbkXg" name="resultatConflit" specification="_utiq8HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZHnStEe6vtI5bcBbkXg" name="nbRegimentsRiposte">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uycZH3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>// Setting nb regiment attaquant
		this.nbRegimentDefenseur = nbRegimentsRiposte;
		// Lancer dÃ¨s attaquant et enregistrer resultat pour traitement data en BD
		this.desAttaque = desAttaquer();
		// Lancer dÃ¨s dÃ©fenseur et enregistrer resultat pour traitement data en BD
		this.desDefense = desDefenseur();
		
		// Gestion des resultats des lancÃ©s de dÃ¨s
		// Classement des dÃ¨s du plus grand au plus petit
     Collections.sort(desAttaque, Collections.reverseOrder());
     Collections.sort(desDefense, Collections.reverseOrder());
     
	    System.out.println(&quot;ATTAQUANT : &quot;+ this.desAttaque);
	    System.out.println(&quot;DEFENDEUR : &quot;+ this.desDefense);
	    
	    System.out.println(&quot;\nAVANT : Territoire attaqué = &quot;+this.territoireDefenseur+&quot; - Occupant = &quot;+this.territoireDefenseur.getOccupant());
	    System.out.println(&quot;ATTAQUANT : &quot;+ this.territoireAttaquant.getNbRegiments());
	    System.out.println(&quot;DEFENDEUR : &quot;+this.territoireDefenseur.getNbRegiments());
	    
	    int iterations = desDefense.size();
	    int nbRegimentsAttaquantRestant = desAttaque.size();
	    
	    // Comparaison des dÃ¨s par ordre de grandeur
	    for (int i = 0; i &lt; iterations; i++) {
	        int attaque = desAttaque.get(i);
	        int defense = desDefense.get(i);

	        // Pour chaque dés, si le resultat de l'attaquant est plus grand que celui de la dÃ©fense, le defenseur perd un regiment
	        if (attaque > defense) {
	            int nbRegimentsDefenseur = territoireDefenseur.getNbRegiments();
	            if (nbRegimentsDefenseur > 0) {
	                territoireDefenseur.setNbRegiments(territoireDefenseur.getNbRegiments() - 1);
	                
	            }
		    // Pour chaque dÃ¨s, si le resultat de l'attaquant est Ã©gale ou plus petit que celui de la dÃ©fense, l' attaquant perd un regiment
	        } else {
	            int nbRegimentsAttaquant = territoireAttaquant.getNbRegiments();
	            if (nbRegimentsAttaquant > 0) {
	                territoireAttaquant.setNbRegiments(territoireAttaquant.getNbRegiments() - 1);
	            }
	            nbRegimentsAttaquantRestant=nbRegimentsAttaquantRestant-1;
	        }
	    }
	    System.out.println(&quot;\nAPRES : Territoire attaqué = &quot;+this.territoireDefenseur+&quot; - Occupant = &quot;+this.territoireDefenseur.getOccupant());
	    System.out.println(&quot;ATTAQUANT : &quot;+this.territoireAttaquant.getNbRegiments());
	    System.out.println(&quot;DEFENDEUR : &quot;+this.territoireDefenseur.getNbRegiments());
	    
	    System.out.println(&quot;\nNb de régiment de l'attaquant déplacable : &quot;+nbRegimentsAttaquantRestant); 
	    
	    // Si le defenseur a perdu toutes ses troupes, on update le statut du territoire
	    Boolean isNouveauTerritoireConquis = false;
		if(this.territoireDefenseur.getNbRegiments()==0) {
			
			// UPDATE CLASSE TERRITOIRE
			// Retrait des troupes du territoire attaquant pour les deplacer dans le territoire conquis
			this.territoireAttaquant.enleverNbRegiments(nbRegimentsAttaquantRestant);
			this.territoireDefenseur.setNbRegiments(nbRegimentsAttaquantRestant);
			// Mise à jour du joueur occupant le territoire conquis
			this.territoireDefenseur.setOccupant(this.territoireAttaquant.getOccupant());
			
			// UPDATE CLASSE JOUEUR
			// Mise à jour de la liste des territoires occupés par les deux joueurs 
			this.defenseur.supprimerTerritoiresConquis(this.territoireDefenseur);
			this.attaquant.ajouterTerritoiresConquis(this.territoireDefenseur);
			// Declaration qu'un nouveau territoire a ete conquis par le joueur attaquant
			isNouveauTerritoireConquis = true;
		}
	    System.out.println(&quot;\nAPRES MAJ : Territoire attaqué = &quot;+this.territoireDefenseur+&quot; - Occupant = &quot;+this.territoireDefenseur.getOccupant()+&quot; - Nb Troupes : &quot;+this.territoireDefenseur.getNbRegiments());
	    System.out.println(&quot;ATTAQUANT : &quot;+this.territoireAttaquant.getNbRegiments());
	    System.out.println(&quot;DEFENDEUR : &quot;+this.territoireDefenseur.getNbRegiments());
	    return isNouveauTerritoireConquis;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZIHStEe6vtI5bcBbkXg" name="desAttaquer" specification="_utiq83StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZIXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Integer> resultats = new ArrayList&lt;>();

     for (int i = 0; i &lt; this.nbRegimentAttaquant; i++) {
     	LancerDes lancerDes=new LancerDes();
         int resultat = lancerDes.getResultatDes();
         resultats.add(resultat);
     }
     return resultats;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZInStEe6vtI5bcBbkXg" name="desDefenseur" specification="_utjSAXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZI3StEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Integer> resultats = new ArrayList&lt;>();
     for (int i = 0; i &lt; this.nbRegimentDefenseur; i++) {
     	LancerDes lancerDes=new LancerDes();
         int resultat = lancerDes.getResultatDes();
         resultats.add(resultat);
     }
     return resultats;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utiq8HStEe6vtI5bcBbkXg" name="resultatConflit" method="_uycZHXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utiq8XStEe6vtI5bcBbkXg" name="nbRegimentsRiposte">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utiq8nStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utiq83StEe6vtI5bcBbkXg" name="desAttaquer" method="_uycZIHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux3xUHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utjSAXStEe6vtI5bcBbkXg" name="desDefenseur" method="_uycZInStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux3xUXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxYpIHStEe6vtI5bcBbkXg" name="Conflit" method="_uycZF3StEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxYpJXStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxYpJnStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxYpIXStEe6vtI5bcBbkXg" name="attaquant" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxYpInStEe6vtI5bcBbkXg" name="territoireAttaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxYpI3StEe6vtI5bcBbkXg" name="territoireDefenseur" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxYpJHStEe6vtI5bcBbkXg" name="nbRegimentAttaquant">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxYpJ3StEe6vtI5bcBbkXg" type="_utiD4HStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utmVUHStEe6vtI5bcBbkXg" name="Continent">
          <ownedComment xmi:id="_uyjGx3StEe6vtI5bcBbkXg">
            <body>Objet Continent
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyIQAHStEe6vtI5bcBbkXg" name="nom" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyIQAXStEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg" association="_uyvUBHStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyIQA3StEe6vtI5bcBbkXg" value="new ArrayList&lt;>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uycZJHStEe6vtI5bcBbkXg" name="Continent" specification="_ux3xUnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uycZJXStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uycZJnStEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uycZJ3StEe6vtI5bcBbkXg" type="_utmVUHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.nom = nom;
		this.territoires = territoires;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydAIHStEe6vtI5bcBbkXg" name="toString" specification="_utm8YHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydAIXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Continent [nom=&quot; + nom + &quot;]&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utm8YHStEe6vtI5bcBbkXg" name="toString" method="_uydAIHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utm8YXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ux3xUnStEe6vtI5bcBbkXg" name="Continent" method="_uycZJHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ux4YYXStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ux4YYnStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ux3xU3StEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux4YYHStEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux4YY3StEe6vtI5bcBbkXg" type="_utmVUHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utoKgHStEe6vtI5bcBbkXg" name="Equipe">
          <ownedAttribute xmi:id="_uyIQBHStEe6vtI5bcBbkXg" name="nom">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyI3EHStEe6vtI5bcBbkXg" name="statut">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyI3EXStEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg" association="_uyvUB3StEe6vtI5bcBbkXg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyI3EnStEe6vtI5bcBbkXg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyI3FHStEe6vtI5bcBbkXg" value="new Joueur[4]"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydAInStEe6vtI5bcBbkXg" name="Equipe" specification="_uxZ3QHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydAI3StEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydAJHStEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uydAJXStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydAJnStEe6vtI5bcBbkXg" type="_utoKgHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>super();
		this.nom = nom;
		this.statut = &quot;actif&quot;; // MAJ JD
		this.joueurs = joueurs;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uxZ3QHStEe6vtI5bcBbkXg" name="Equipe" method="_uydAInStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxZ3Q3StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxZ3RHStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxZ3QXStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxZ3QnStEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uxZ3RnStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxZ3RXStEe6vtI5bcBbkXg" type="_utoKgHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utoxkHStEe6vtI5bcBbkXg" name="HistoriqueJoueurs">
          <ownedAttribute xmi:id="_uyI3FXStEe6vtI5bcBbkXg" name="classement" type="_uxQtUHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyv7EXStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydAKXStEe6vtI5bcBbkXg" name="HistoriqueJoueurs" specification="_utpYoHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydAKnStEe6vtI5bcBbkXg" type="_utoxkHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.classement=new HashMap&lt;>();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydAK3StEe6vtI5bcBbkXg" name="addClassement" specification="_uxaeUHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydALHStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>int rank=getClassementLength();
		this.classement.put(rank,joueur);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydnMHStEe6vtI5bcBbkXg" name="findMaxValue" specification="_utpYpHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydnMXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int maxValue = 0;

	    for (int key : classement.keySet()) {
	        
	        if (key > maxValue) {
	            maxValue = key;
	        }
	    }

	    return maxValue;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydnMnStEe6vtI5bcBbkXg" name="getClassementLength" specification="_utpYpnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydnM3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return classement.size();
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utpYoHStEe6vtI5bcBbkXg" name="HistoriqueJoueurs" method="_uydAKXStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_utpYoXStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_utpYonStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_utpYo3StEe6vtI5bcBbkXg" type="_utoxkHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utpYpHStEe6vtI5bcBbkXg" name="findMaxValue" visibility="private" method="_uydnMHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utpYpXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utpYpnStEe6vtI5bcBbkXg" name="getClassementLength" method="_uydnMnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utp_sHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxaeUHStEe6vtI5bcBbkXg" name="addClassement" method="_uydAK3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxaeUXStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utp_sXStEe6vtI5bcBbkXg" name="Joueur">
          <ownedAttribute xmi:id="_uyKFMHStEe6vtI5bcBbkXg" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKFMXStEe6vtI5bcBbkXg" name="nom">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKFMnStEe6vtI5bcBbkXg" name="prenom" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKFNHStEe6vtI5bcBbkXg" name="dtNaissance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKFNXStEe6vtI5bcBbkXg" name="territoiresConquis" type="_uxQtUHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyv7FHStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyKsQHStEe6vtI5bcBbkXg" value="new HashMap&lt;>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsQXStEe6vtI5bcBbkXg" name="nbRegimentsRestants" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsQ3StEe6vtI5bcBbkXg" name="missionAchievement" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsRXStEe6vtI5bcBbkXg" name="couleur" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsRnStEe6vtI5bcBbkXg" name="currentmission">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsR3StEe6vtI5bcBbkXg" name="nbTirageDes" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyKsSHStEe6vtI5bcBbkXg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyKsSnStEe6vtI5bcBbkXg" value="new int[6]"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyKsTHStEe6vtI5bcBbkXg" name="nbAttaque" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyLTUXStEe6vtI5bcBbkXg" name="nbDefense" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyLTU3StEe6vtI5bcBbkXg" name="nbTerritoire" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyLTVXStEe6vtI5bcBbkXg" name="nbRegiments" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyLTV3StEe6vtI5bcBbkXg" name="nbTours" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyLTWXStEe6vtI5bcBbkXg" name="allTerritoires" visibility="private" type="_uxOREHStEe6vtI5bcBbkXg" association="_uywiIXStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyL6YXStEe6vtI5bcBbkXg" value="new ArrayList&lt;>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyL6Y3StEe6vtI5bcBbkXg" name="nbRegimentsAterritoires" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydnNHStEe6vtI5bcBbkXg" name="Joueur" specification="_ux5mgHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydnNXStEe6vtI5bcBbkXg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydnNnStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydnN3StEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydnOHStEe6vtI5bcBbkXg" name="dtNaissance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydnOXStEe6vtI5bcBbkXg" name="Continents" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uydnOnStEe6vtI5bcBbkXg" name="couleur">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uydnO3StEe6vtI5bcBbkXg" type="_utp_sXStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.id = id;
		this.nom = nom;
		this.prenom = prenom;
		this.dtNaissance = dtNaissance;

		/** Initialisation des continents dans la hashmap */			
		for (int i = 0; i &lt; Continents.size(); i++) {
			this.territoiresConquis.put(Continents.get(i), new ArrayList&lt;Territoire>());
		}
		this.nbRegimentsRestants = 20;
		this.couleur = couleur;
		this.setMissionAchievement(false);
		
		/** Initialisation des attributs statistique Ã  zero */         //*** A peut etre supprimer ***
		for (int i=0; i&lt;6; i++) {
			this.nbTirageDes[i] = 0;
		}
		this.nbAttaque = 0;
		this.nbDefense = 0;
		this.nbTerritoire = 0;
		this.nbRegiments = 0;
		this.nbTours = 0;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydnPHStEe6vtI5bcBbkXg" name="DistribuerRandomMission" specification="_ux6NkXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydnPXStEe6vtI5bcBbkXg" name="listeMission" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>Random random = new Random();
				int randomIndex = random.nextInt(listeMission.size());
				this.currentmission = listeMission.remove(randomIndex);
				System.out.println(
				&quot;La mission du joueur &quot; + id + &quot; : &quot; + currentmission);
			</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uydnPnStEe6vtI5bcBbkXg" name="getPrenom" specification="_utrN0HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uydnP3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return prenom;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOQHStEe6vtI5bcBbkXg" name="setPrenom" specification="_utr04XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOQXStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.prenom = prenom;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOQnStEe6vtI5bcBbkXg" name="getNbRegimentsRestants" specification="_utr043StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOQ3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nbRegimentsRestants;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeORHStEe6vtI5bcBbkXg" name="getMissionAchievement" specification="_utr05XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeORXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return missionAchievement;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeORnStEe6vtI5bcBbkXg" name="setMissionAchievement" specification="_utr053StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOR3StEe6vtI5bcBbkXg" name="missionAchievement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.missionAchievement = missionAchievement;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOSHStEe6vtI5bcBbkXg" name="ajouterNbRegimentsRestants" specification="_utsb8HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOSXStEe6vtI5bcBbkXg" name="nbRegimentsBonus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.nbRegimentsRestants =  this.nbRegimentsRestants + nbRegimentsBonus;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOSnStEe6vtI5bcBbkXg" name="enleverNbRegimentsRestants" specification="_utsb8nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOS3StEe6vtI5bcBbkXg" name="nbRegimentsMalus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.nbRegimentsRestants =  this.nbRegimentsRestants - nbRegimentsMalus;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOTHStEe6vtI5bcBbkXg" name="getAllTerritoires" specification="_uttDAHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOTXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>HashMap&lt;Continent, ArrayList&lt;Territoire>> map = new HashMap&lt;>(this.territoiresConquis);
		ArrayList&lt;Territoire> allTerritoires = new ArrayList&lt;>();
	    // é  åŽ†HashMapä¸­çš„æ‰€æœ‰å€¼ï¼ˆArrayList&lt;Territoire>ï¼‰
	    for (ArrayList&lt;Territoire> territoriesList : map.values()) {
	        // é  åŽ†æ¯ ä¸ªArrayList&lt;Territoire>ï¼Œå°†å…¶ä¸­çš„Territoireæ·»åŠ åˆ°allTerritoiresä¸­
	        for (Territoire territoire : territoriesList) {
	            allTerritoires.add(territoire);
	        }
	    }
	    return allTerritoires;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOTnStEe6vtI5bcBbkXg" name="getAllTerritoiresClear" specification="_uttDAnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOT3StEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;String>liste = new ArrayList&lt;>();
		for (Territoire territoire : this.getAllTerritoires()) {
			liste.add(territoire.getNom());
		}
		return liste;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOUHStEe6vtI5bcBbkXg" name="getAllTerritoiresClearNumero" specification="_uttqEXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOUXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;String>liste = new ArrayList&lt;>();
		for (Territoire territoire : this.getAllTerritoires()) {
			liste.add(territoire.getNumber() + &quot; : &quot; + territoire.getNom());
		}
		return liste;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOUnStEe6vtI5bcBbkXg" name="calculerNbRegimentsAPlacer" specification="_utuRIHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOU3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>// Continent conquis ?  
	 ArrayList&lt;Continent> continentsOccupes = new ArrayList&lt;Continent>();
	 int total = 0;
	 continentsOccupes = this.consulterContinentsEntierementOccupes();
	 int ajoutCauseContinent = 0;	        	 
	 // Parcours de continent de la liste (conquis)
  for (Continent continent : continentsOccupes) {
     	if (continent.getNom() == &quot;Europe&quot;) {
     		ajoutCauseContinent = ajoutCauseContinent + 7;
         }
         if (continent.getNom() == &quot;Asie&quot;) {
         	ajoutCauseContinent = ajoutCauseContinent + 12;
         }
         if (continent.getNom() == &quot;Amerique du Nord&quot;) {
         	ajoutCauseContinent = ajoutCauseContinent + 9;
         }
         if (continent.getNom() == &quot;Amerique du Sud&quot;) {
         	ajoutCauseContinent = ajoutCauseContinent + 4;
         }
         if (continent.getNom() == &quot;Afrique&quot;) {
         	ajoutCauseContinent = ajoutCauseContinent + 6;
         }
         if (continent.getNom() == &quot;Oceanie&quot;) {
         	ajoutCauseContinent = ajoutCauseContinent + 4;
         }
     }
  int ajoutCauseTerritoire = 3;
  int totalTerritoires = this.getAllTerritoires().size();
  // On calcul uniquement si la quantitÃ© de territoire repond au seuil min de regiments
  // 9/9 = 3 qui est le minimum de troupe que recoit un joueur
  if (totalTerritoires >= 9) {
 	 ajoutCauseTerritoire = totalTerritoires / 3; 
  }
 total = ajoutCauseTerritoire + ajoutCauseContinent;
	return total;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOVHStEe6vtI5bcBbkXg" name="ajouterTerritoiresConquis" specification="_uxbFYHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOVXStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>Continent continent = territoire.getContinent();
     territoiresConquis.get(continent).add(territoire);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOVnStEe6vtI5bcBbkXg" name="supprimerTerritoiresConquis" specification="_uxbFYnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOV3StEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>Continent continent = territoire.getContinent();
		territoiresConquis.get(continent).remove(territoire);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOWHStEe6vtI5bcBbkXg" name="consulterContinentsEntierementOccupes" specification="_utuRInStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOWXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;Continent> continentsConquis = new ArrayList&lt;>();
		// Parcours de chaque continent dans le dico de stockage des territoires conquis
     for (Continent continent : this.territoiresConquis.keySet()) {
         int countContinents = this.territoiresConquis.get(continent).size();
         int totalContinents = 0;
         // VÃ©rfication du nombre de territoires par continents
         if (continent.getNom() == &quot;Europe&quot;) {
         	totalContinents = 7;
         }
         else if (continent.getNom() == &quot;Asie&quot;) {
         	totalContinents = 12;
         }
         else if (continent.getNom() == &quot;Amerique du Nord&quot;) {
         	totalContinents = 9;
         }
         else if (continent.getNom() == &quot;Amerique du Sud&quot;) {
         	totalContinents = 4;
         }
         else if (continent.getNom() == &quot;Afrique&quot;) {
         	totalContinents = 6;
         }
         else if (continent.getNom() == &quot;Oceanie&quot;) {
         	totalContinents = 4;
         }
         // Si le joueur Ã  tous les territoires d'un continent on note la conquete du continent dans le dico
         System.out.println(&quot;count &quot;+countContinents+&quot; vs. total &quot;+totalContinents);
         if ((int)countContinents == (int)totalContinents) {
         	System.out.println(&quot;/nAjout de &quot;+continent+&quot; à la liste des pays conquis&quot;);
         	continentsConquis.add(continent);
         }
     }
     return continentsConquis;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyeOWnStEe6vtI5bcBbkXg" name="calculerNbRegimentsATerritoires" specification="_uxbscHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyeOW3StEe6vtI5bcBbkXg" name="t" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyeOXHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nbRegimentsAterritoires=t.getNbRegiments();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1UHStEe6vtI5bcBbkXg" name="MissionReussie" specification="_uxcTgXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1UXStEe6vtI5bcBbkXg" name="participants" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uye1UnStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;Territoire> allTerritoires = this.getAllTerritoires();
			ArrayList&lt;Continent> continentsConquis = new ArrayList&lt;>();
			continentsConquis = consulterContinentsEntierementOccupes();
			boolean reussi = false;
			boolean ConquerirAmNord = false;
			boolean ConquerirAfri = false;
			boolean ConquerirEurope = false;
			boolean ConquerirAsie = false;
			boolean ConquerirOceanie = false;
			boolean ConquerirAmSud = false;
			for(int i=0;i&lt;continentsConquis.size();i++) {
				if(continentsConquis.get(i).getNom()==&quot;Amerique du Nord&quot;) {ConquerirAmNord=true;}
				if(continentsConquis.get(i).getNom()==&quot;Afrique&quot;) {ConquerirAfri=true;}
				if(continentsConquis.get(i).getNom()==&quot;Europe&quot;) {ConquerirEurope=true;}
				if(continentsConquis.get(i).getNom()==&quot;Asie&quot;) {ConquerirAsie=true;}
				if(continentsConquis.get(i).getNom()==&quot;Oceanie&quot;) {ConquerirOceanie=true;}
				if(continentsConquis.get(i).getNom()==&quot;Amerique du Sud&quot;) {ConquerirAmSud=true;}
			}
			//0 MissionReussie : 
			//Vous devez conquérir 18 territoires et occuper chacun d'eux avec deux armées au moins
			//您必须征服 18 块领土，并至少用两支军队占领其中的每一块领土
			if(this.currentmission == &quot;Vous devez conquérir 18 territoires et occuper chacun d'eux avec deux armées au moins.&quot;) {
				if((int)allTerritoires.size()>=18 ||nbRegimentsAterritoires>=2) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//1 MissionReussie : conquérir toute l'Amérique du Nord et l'Afrique 
			//完成任务征服整个北美洲和非洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Asie et l'Amérique du sud.&quot;) {
				if (ConquerirAsie&amp;&amp;ConquerirAmSud) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//2 MissionReussie : 
			//Vous devez conquérir en totalité l'Europe et l'Amérique du sud plus un troisième continent au choix
			//您必须征服整个欧洲和南美洲，外加您选择的第三个洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Europe et l'Amérique du sud plus un troisième continent au choix.&quot;) {
				if ((ConquerirEurope&amp;&amp;ConquerirAmSud)&amp;(ConquerirAmNord||ConquerirAfri||ConquerirAsie||ConquerirOceanie)) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			 
			//3 MissionReussie : 
			//Vous devez conquérir en totalité l'Europe et l'Océanie plus un troisième continent au choix
			//您必须征服整个欧洲和大洋洲，外加您选择的第三个洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Europe et l'Océanie plus un troisième continent au choix.&quot;) {
				if ((ConquerirEurope&amp;&amp;ConquerirOceanie)&amp;(ConquerirAmNord||ConquerirAfri||ConquerirAsie||ConquerirAmSud)) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//4 MissionReussie : 
			//Vous devez conquérir 24 territoires aux choix
			//您必须征服您选择的 24 个领土
			else if(this.currentmission == &quot;Vous devez conquérir 24 territoires aux choix.&quot;) {
				if((int)allTerritoires.size()>=24) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//5 MissionReussie : 
			//Vous devez conquérir en totalité l'Amérique du Nord et l'Océanie
			//您必须征服整个北美洲和大洋洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Amérique du Nord et l'Océanie.&quot;) {
				if (ConquerirAmNord&amp;&amp;ConquerirOceanie) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//6 MissionReussie : 
			//Vous devez conquérir en totalité l'Asie et l'Afrique
			//您必须征服整个亚洲和非洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Asie et l'Afrique.&quot;) {
				if (ConquerirAsie&amp;&amp;ConquerirAfri) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			//7 MissionReussie : 
			//Vous devez conquérir en totalité l'Asie et l'Amérique du sud
			//您必须征服整个亚洲和南美洲
			else if(this.currentmission == &quot;Vous devez conquérir en totalité l'Asie et l'Amérique du sud.&quot;) {
				if (ConquerirAsie&amp;&amp;ConquerirAmSud) {
					reussi=true;
					System.out.println(&quot;Vous avez gagné !&quot;);
				}
			}
			
			
			//8 MissionReussie : 
			//Vous devez détruire les armées jaunes. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.
			//您必须摧毁黄色军队。如果您自己是黄色军队的拥有者，或者拥有黄色军队的玩家被其他玩家淘汰，您的目标就会自动变为征服 24 个领土
			else if(this.currentmission == &quot;Vous devez détruire les armées jaunes. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;jaunes&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;jaunes&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if(allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			
			//Vous devez détruire les armées bleues. Si vous êtes vous même le propriétaire des armées bleues ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.
			else if(this.currentmission == &quot;Vous devez détruire les armées bleues. Si vous êtes vous même le propriétaire des armées bleues ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;bleues&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;bleues&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if((int)allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			
			//Vous devez détruire les armées noires. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.
			else if(this.currentmission == &quot;Vous devez détruire les armées noires. Si vous êtes vous même le propriétaire des armées noires ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;noires&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;noires&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if((int)allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			
			//Vous devez détruire les armées violettes. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.
			else if(this.currentmission == &quot;Vous devez détruire les armées violettes. Si vous êtes vous même le propriétaire des armées violettes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;violettes&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;violettes&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if((int)allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			
			//Vous devez détruire les armées vertes. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.		//您必须摧毁黄色军队。如果您自己是黄色军队的拥有者，或者拥有黄色军队的玩家被其他玩家淘汰，您的目标就会自动变为征服 24 个领土
			else if(this.currentmission == &quot;Vous devez détruire les armées vertes. Si vous êtes vous même le propriétaire des armées vertes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;vertes&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;vertes&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if((int)allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			
			//Vous devez détruire les armées rouges. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.
			else if(this.currentmission == &quot;Vous devez détruire les armées rouges. Si vous êtes vous même le propriétaire des armées rouges ou si le joueur qui en est propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;) {
				if (couleur!=&quot;rouges&quot;) {
					for(int i=0;i&lt;participants.length;i++) {
						if(participants[i].getCouleur()==&quot;rouges&quot;&amp;&amp;participants[i].ComprtitionEchoue()==true) {
							reussi=true;
							System.out.println(&quot;Vous avez gagné !&quot;);
						}
					}
				}else {
					if((int)allTerritoires.size()>=24) {
						reussi=true;
						System.out.println(&quot;Vous avez gagné !&quot;);		
					}
				}
			}
			else {
				reussi=false;
			}
		this.missionAchievement = reussi;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1U3StEe6vtI5bcBbkXg" name="toString" specification="_utu4MXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1VHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Joueur [nom=&quot; + nom + &quot;, prenom=&quot; + prenom + &quot;]&quot;;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1VXStEe6vtI5bcBbkXg" name="ComprtitionEchoue" specification="_utvfQ3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1VnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>System.out.println(&quot;Joueur &quot;+id+&quot; : Malheureusement, tous vos territoires ont été confisqués ! Vous avez échoué !&quot;);
		return nbRegiments==0;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1V3StEe6vtI5bcBbkXg" name="ComprtitionReussie" specification="_utvfRXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1WHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;Continent>continentsConquis = new ArrayList&lt;>();
		continentsConquis = consulterContinentsEntierementOccupes();
		boolean reussi = false;
		boolean ConquerirAmNord = false;
		boolean ConquerirAfri = false;
		boolean ConquerirEurope = false;
		boolean ConquerirAsie = false;
		boolean ConquerirOceanie = false;
		boolean ConquerirAmSud = false;
		for(int i=0;i&lt;continentsConquis.size();i++) {
			if(continentsConquis.get(i).getNom()==&quot;Amerique du Nord&quot;) {ConquerirAmNord=true;}
			if(continentsConquis.get(i).getNom()==&quot;Afrique&quot;) {ConquerirAfri=true;}
			if(continentsConquis.get(i).getNom()==&quot;Europe&quot;) {ConquerirEurope=true;}
			if(continentsConquis.get(i).getNom()==&quot;Asie&quot;) {ConquerirAsie=true;}
			if(continentsConquis.get(i).getNom()==&quot;Oceanie&quot;) {ConquerirOceanie=true;}
			if(continentsConquis.get(i).getNom()==&quot;Amerique du Sud&quot;) {ConquerirAmSud=true;}
		}
		if (ConquerirAmNord&amp;&amp;ConquerirAfri&amp;&amp;ConquerirEurope&amp;&amp;ConquerirAsie
				&amp;&amp;ConquerirOceanie&amp;&amp;ConquerirAmSud) {
			reussi=true;
			System.out.println(&quot;Félicitations au joueur &quot;+id+&quot; : Vous avez gagné !&quot;);
		}
		return reussi;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utrN0HStEe6vtI5bcBbkXg" name="getPrenom" method="_uydnPnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt0XStEe6vtI5bcBbkXg">
              <body>@return String</body>
            </ownedComment>
            <ownedParameter xmi:id="_utr04HStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utr04XStEe6vtI5bcBbkXg" name="setPrenom" method="_uyeOQHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt0nStEe6vtI5bcBbkXg">
              <body>@param prenom</body>
            </ownedComment>
            <ownedParameter xmi:id="_utr04nStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utr043StEe6vtI5bcBbkXg" name="getNbRegimentsRestants" method="_uyeOQnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt03StEe6vtI5bcBbkXg">
              <body>Nombre de rÃ©giments Ã  placer sur la carte
	 * @return nbRegimentsRestants</body>
            </ownedComment>
            <ownedParameter xmi:id="_utr05HStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utr05XStEe6vtI5bcBbkXg" name="getMissionAchievement" method="_uyeORHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt1HStEe6vtI5bcBbkXg">
              <body>Getter missionAchievement
	 * @return boolean true for mission success</body>
            </ownedComment>
            <ownedParameter xmi:id="_utr05nStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utr053StEe6vtI5bcBbkXg" name="setMissionAchievement" method="_uyeORnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt1XStEe6vtI5bcBbkXg">
              <body>Setter missionAchievement
	 * @param missionAchievement</body>
            </ownedComment>
            <ownedParameter xmi:id="_utr06HStEe6vtI5bcBbkXg" name="missionAchievement">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utsb8HStEe6vtI5bcBbkXg" name="ajouterNbRegimentsRestants" method="_uyeOSHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt1nStEe6vtI5bcBbkXg">
              <body>Ajoute des rÃ©giments au nombre initial
	 * @param nbRegimentsRestants</body>
            </ownedComment>
            <ownedParameter xmi:id="_utsb8XStEe6vtI5bcBbkXg" name="nbRegimentsBonus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utsb8nStEe6vtI5bcBbkXg" name="enleverNbRegimentsRestants" method="_uyeOSnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt13StEe6vtI5bcBbkXg">
              <body>EnlÃ¨ve des rÃ©giments au nombre initial
	 * @param nbRegimentsRestants</body>
            </ownedComment>
            <ownedParameter xmi:id="_utsb83StEe6vtI5bcBbkXg" name="nbRegimentsMalus">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uttDAHStEe6vtI5bcBbkXg" name="getAllTerritoires" method="_uyeOTHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt2HStEe6vtI5bcBbkXg">
              <body>@return ArrayList&lt;Territoire> Liste de territoires</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux6NlHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uttDAnStEe6vtI5bcBbkXg" name="getAllTerritoiresClear" method="_uyeOTnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt2XStEe6vtI5bcBbkXg">
              <body>@return ArrayList&lt;String> liste nom des territoires occupés par le joueur</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux6NlXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uttqEXStEe6vtI5bcBbkXg" name="getAllTerritoiresClearNumero" method="_uyeOUHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt2nStEe6vtI5bcBbkXg">
              <body>@return ArrayList&lt;String> liste nom des territoires occupés par le joueur</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux60oHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utuRIHStEe6vtI5bcBbkXg" name="calculerNbRegimentsAPlacer" method="_uyeOUnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt23StEe6vtI5bcBbkXg">
              <body>@return int nb de regiments que le joueur dois placer en dÃ©but de tour</body>
            </ownedComment>
            <ownedParameter xmi:id="_utuRIXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utuRInStEe6vtI5bcBbkXg" name="consulterContinentsEntierementOccupes" method="_uyeOWHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt3nStEe6vtI5bcBbkXg">
              <body>@return Arraylist &lt;Continent> nom continent conquis</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux60oXStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utu4MXStEe6vtI5bcBbkXg" name="toString" method="_uye1U3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utu4MnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utvfQ3StEe6vtI5bcBbkXg" name="ComprtitionEchoue" method="_uye1VXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt4XStEe6vtI5bcBbkXg">
              <body>ARCHIVE_METHODE_ComprtitionEchoue()
	 * @return boolean 
	 * true si nbRegiments==0 
	 * c'est a dire que le joueur n'a plus de regiment sur la carte</body>
            </ownedComment>
            <ownedParameter xmi:id="_utvfRHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utvfRXStEe6vtI5bcBbkXg" name="ComprtitionReussie" method="_uye1V3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utvfRnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxbFYHStEe6vtI5bcBbkXg" name="ajouterTerritoiresConquis" method="_uyeOVHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt3HStEe6vtI5bcBbkXg">
              <body>Ajoute un territoire conquis Ã  la HashMap&lt;Continent, Territoire> alias territoiresConquis du joueur 
	 * @param territoiresConquis</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxbFYXStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxbFYnStEe6vtI5bcBbkXg" name="supprimerTerritoiresConquis" method="_uyeOVnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt3XStEe6vtI5bcBbkXg">
              <body>Supprimer un territoire conquis Ã  la HashMap&lt;Continent, Territoire> alias territoiresConquis du joueur 
	 * @param territoiresConquis</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxbFY3StEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxbscHStEe6vtI5bcBbkXg" name="calculerNbRegimentsATerritoires" method="_uyeOWnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt33StEe6vtI5bcBbkXg">
              <body>@param t
	 * @return int nbRegimentsAterritoires
	 * Nobre de régiments présent sur un territoire donné</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxbscXStEe6vtI5bcBbkXg" name="t" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxcTgHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxcTgXStEe6vtI5bcBbkXg" name="MissionReussie" method="_uye1UHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt4HStEe6vtI5bcBbkXg">
              <body>@param participants
	 * @return boolean true pour succes , false pour pas succes</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxcTgnStEe6vtI5bcBbkXg" name="participants" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uxcTg3StEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ux5mgHStEe6vtI5bcBbkXg" name="Joueur" method="_uydnNHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ux5mh3StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ux5miHStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_uyjt0HStEe6vtI5bcBbkXg">
              <body>Constructeur
	 * @param id
	 * @param nom
	 * @param prenom
	 * @param dtNaissance</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux5mgXStEe6vtI5bcBbkXg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux5mgnStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux5mg3StEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux5mhHStEe6vtI5bcBbkXg" name="dtNaissance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux5mhXStEe6vtI5bcBbkXg" name="Continents" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux5mhnStEe6vtI5bcBbkXg" name="couleur">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ux5miXStEe6vtI5bcBbkXg" type="_utp_sXStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ux6NkXStEe6vtI5bcBbkXg" name="DistribuerRandomMission" method="_uydnPHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux6NknStEe6vtI5bcBbkXg" name="listeMission" type="_uxOREHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utx7gHStEe6vtI5bcBbkXg" name="LancerDes">
          <ownedAttribute xmi:id="_uyMhcHStEe6vtI5bcBbkXg" name="resultatDes" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1WXStEe6vtI5bcBbkXg" name="LancerDes" specification="_utyikHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1WnStEe6vtI5bcBbkXg" type="_utx7gHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.resultatDes = lancerDes();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uye1W3StEe6vtI5bcBbkXg" name="lancerDes" specification="_utyilHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uye1XHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Random random = new Random();
     return random.nextInt(6)+1; 
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utyikHStEe6vtI5bcBbkXg" name="LancerDes" method="_uye1WXStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_utyikXStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_utyiknStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_utyik3StEe6vtI5bcBbkXg" type="_utx7gHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utyilHStEe6vtI5bcBbkXg" name="lancerDes" method="_uye1W3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utyilXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_utzJoHStEe6vtI5bcBbkXg" name="Manche">
          <ownedAttribute xmi:id="_uyMhcXStEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg" association="_uywiJHStEe6vtI5bcBbkXg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyMhcnStEe6vtI5bcBbkXg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyMhdHStEe6vtI5bcBbkXg" value="new Joueur[6]"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyMhdXStEe6vtI5bcBbkXg" name="tours" type="_uxOREHStEe6vtI5bcBbkXg" association="_uyxJMHStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyMhd3StEe6vtI5bcBbkXg" name="vainqueur" visibility="private" type="_utp_sXStEe6vtI5bcBbkXg" association="_uyxJM3StEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyNIgHStEe6vtI5bcBbkXg" name="duree" type="_utg1wHStEe6vtI5bcBbkXg" association="_uyxJNnStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyNIgXStEe6vtI5bcBbkXg" value="new Chronometre()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyNIgnStEe6vtI5bcBbkXg" name="estTerminee">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyNIg3StEe6vtI5bcBbkXg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyNIhHStEe6vtI5bcBbkXg" name="dateDebut">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyNIhXStEe6vtI5bcBbkXg" name="vaincre" visibility="private" type="_uxQtUHStEe6vtI5bcBbkXg" association="_uyxwQXStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyNvkHStEe6vtI5bcBbkXg" name="classement" type="_uxQtUHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyxwRHStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcYnStEe6vtI5bcBbkXg" name="Manche" specification="_uxhMAHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcY3StEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyfcZHStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyfcZXStEe6vtI5bcBbkXg" type="_utzJoHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.joueurs = joueurs;
		this.tours = tours;
		this.vainqueur = vainqueur;
		this.duree = duree;
		// Lancement du chronometre à la création de la manche
		duree.demarrerChronometre();
		this.estTerminee = false;
		this.classement=new HashMap&lt;>();
		// Debut - Récupération de la date actuelle
		SimpleDateFormat dateActuelle = new SimpleDateFormat(&quot;dd/MM/yyyy HH:mm:ss&quot;);
     Date date = new Date();
     String dateCastee = dateActuelle.format(date);
		// Fin - Récupération de la date actuelle
		this.dateDebut = dateCastee;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcZnStEe6vtI5bcBbkXg" name="addTours" specification="_uxhzEHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcZ3StEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>this.tours.add(tour);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcaHStEe6vtI5bcBbkXg" name="toString" specification="_utzwsHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcaXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Manche [joueurs=&quot; + Arrays.toString(joueurs) + &quot;, tours=&quot; + tours + &quot;, vainqueur=&quot; + vainqueur
				+ &quot;, duree=&quot; + consulterDureeManche() + &quot;, estTerminee=&quot; + estTerminee + &quot;, dateDebut=&quot; + dateDebut + &quot;]&quot;;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcanStEe6vtI5bcBbkXg" name="addClassement" specification="_uxhzEnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfca3StEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>int rank=getClassementLength();
		this.classement.put(rank,joueur);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcbHStEe6vtI5bcBbkXg" name="addVaincre" specification="_uxhzFHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcbXStEe6vtI5bcBbkXg" name="joueurVaincu" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyfcbnStEe6vtI5bcBbkXg" name="joueurVaincre" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>this.vaincre.put(joueurVaincu,joueurVaincre);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcb3StEe6vtI5bcBbkXg" name="findWinnerOf" specification="_uxhzF3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfccHStEe6vtI5bcBbkXg" name="defeatedJoueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyfccXStEe6vtI5bcBbkXg" type="_utp_sXStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>for (Entry&lt;Joueur, Joueur> entry : vaincre.entrySet()) {
	        Joueur defeated = entry.getKey();
	        Joueur winner = entry.getValue();
	        if (defeated.equals(defeatedJoueur)) {
	            return winner;
	        }
	    }
	    return null;//Le joueur n'a pas encore été battu
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfccnStEe6vtI5bcBbkXg" name="findMaxValue" specification="_ut0XwHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcc3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int maxValue = 0;

	    for (int key : classement.keySet()) {
	        
	        if (key > maxValue) {
	            maxValue = key;
	        }
	    }

	    return maxValue;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyfcdHStEe6vtI5bcBbkXg" name="getClassementLength" specification="_ut0XwnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyfcdXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return classement.size();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDcHStEe6vtI5bcBbkXg" name="findMancheByConflit" specification="_uxiaIHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDcXStEe6vtI5bcBbkXg" name="conflit" type="_utiD4HStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uygDcnStEe6vtI5bcBbkXg" type="_utzJoHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>for (Tour tour : tours) {
         HashMap&lt;Integer, Archive_Conflit> conflitMap = tour.getConflitMap();
         if (conflitMap.containsValue(conflit)) {
             return this; 
         }
     }
     return null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDc3StEe6vtI5bcBbkXg" name="cloturerPartie" specification="_ut0XxHStEe6vtI5bcBbkXg">
            <language>java</language>
            <body>this.estTerminee = true;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDdHStEe6vtI5bcBbkXg" name="consulterDureeManche" specification="_ut0XxXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDdXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return duree.getTempsEcoule();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDdnStEe6vtI5bcBbkXg" name="definirOrdreJoueur" specification="_ut0Xx3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDd3StEe6vtI5bcBbkXg" name="resultatDes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Joueur[] joueurs_stock = new Joueur[6]; 
		int index_stock = 0;
		resultatDes = resultatDes - 1; // -1 pour adapter le tirage à l'index d'un tableau
		// Ajout des joueurs dans un tableau stock, à partir du numéro correspondant au tirage du dés
		// Joueur positionnés à / ou / après l'indice correpondant au resultat du des
		for (int i = resultatDes; i &lt; 6; i++) {
			joueurs_stock[index_stock++] = joueurs[i];
		}
		// Joueur positionnés avant l'indice correpondant au resultat du des
		for (int i = 0; i &lt; resultatDes; i++) {
		    joueurs_stock[index_stock++] = joueurs[i];
		}
		// Mise à jour du tableau d'origine avec les joueurs triés
		for (int i = 0; i &lt; 6; i++) {
		    joueurs[i] = joueurs_stock[i];
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utzwsHStEe6vtI5bcBbkXg" name="toString" method="_uyfcaHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utzwsXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut0XwHStEe6vtI5bcBbkXg" name="findMaxValue" visibility="private" method="_uyfccnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut0XwXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut0XwnStEe6vtI5bcBbkXg" name="getClassementLength" method="_uyfcdHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut0Xw3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut0XxHStEe6vtI5bcBbkXg" name="cloturerPartie" method="_uygDc3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt4nStEe6vtI5bcBbkXg">
              <body>Met à jour la variable estTerminee correspondant au statut de la partie à vrai pour signifier que la partie est terminée</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_ut0XxXStEe6vtI5bcBbkXg" name="consulterDureeManche" method="_uygDdHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt43StEe6vtI5bcBbkXg">
              <body>Permet de consulter le chronometre de la manche visée</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut0XxnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut0Xx3StEe6vtI5bcBbkXg" name="definirOrdreJoueur" method="_uygDdnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt5HStEe6vtI5bcBbkXg">
              <body>Réorganisation de l'ordre des joueurs dans la manche
	 * @param resultatDes : résultat du tirage du dès déterminant le joueur qui commence la partie</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut0-0HStEe6vtI5bcBbkXg" name="resultatDes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxhMAHStEe6vtI5bcBbkXg" name="Manche" method="_uyfcYnStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxhMAnStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxhMA3StEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxhMAXStEe6vtI5bcBbkXg" name="joueurs" type="_utp_sXStEe6vtI5bcBbkXg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uxhMBXStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxhMBHStEe6vtI5bcBbkXg" type="_utzJoHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxhzEHStEe6vtI5bcBbkXg" name="addTours" method="_uyfcZnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxhzEXStEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxhzEnStEe6vtI5bcBbkXg" name="addClassement" method="_uyfcanStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxhzE3StEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxhzFHStEe6vtI5bcBbkXg" name="addVaincre" method="_uyfcbHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxhzFXStEe6vtI5bcBbkXg" name="joueurVaincu" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxhzFnStEe6vtI5bcBbkXg" name="joueurVaincre" type="_utp_sXStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxhzF3StEe6vtI5bcBbkXg" name="findWinnerOf" method="_uyfcb3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxhzGHStEe6vtI5bcBbkXg" name="defeatedJoueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxhzGXStEe6vtI5bcBbkXg" type="_utp_sXStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxiaIHStEe6vtI5bcBbkXg" name="findMancheByConflit" method="_uygDcHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxiaIXStEe6vtI5bcBbkXg" name="conflit" type="_utiD4HStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxiaInStEe6vtI5bcBbkXg" type="_utzJoHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ut20AHStEe6vtI5bcBbkXg" name="Mission">
          <ownedComment xmi:id="_uyjt5XStEe6vtI5bcBbkXg">
            <body>*</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyOWonStEe6vtI5bcBbkXg" name="missions" visibility="private" type="_uxOREHStEe6vtI5bcBbkXg" association="_uyxwR3StEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyOWpHStEe6vtI5bcBbkXg" value="new ArrayList&lt;>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyOWpnStEe6vtI5bcBbkXg" name="content" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDeHStEe6vtI5bcBbkXg" name="Mission" specification="_ut3bEHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDeXStEe6vtI5bcBbkXg" type="_ut20AHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>//Carte de mission
		//TODO Peut être à instancier dans une classe comme les territoires dans &quot;monde&quot; pour clean le main
		missions.add(&quot;Vous devez conquérir 18 territoires et occuper chacun d'eux avec deux armées au moins.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Amérique du Nord et l'Afrique.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Europe et l'Amérique du sud plus un troisième continent au choix.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Europe et l'Océanie plus un troisième continent au choix.&quot;);
		missions.add(&quot;Vous devez conquérir 24 territoires aux choix.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Amérique du Nord et l'Océanie.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Asie et l'Afrique.&quot;);
		missions.add(&quot;Vous devez conquérir en totalité l'Asie et l'Amérique du sud.&quot;);
		
		// N�cessite de modifier la strcuture de la classe Mission (attribut joueurAVaincre) ainsi que les methodes associ�es, pas assez de temps 
//		missions.add(&quot;Vous devez détruire les armées jaunes. Si vous êtes vous même le propriétaire des armées jaunes ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
//		missions.add(&quot;Vous devez détruire les armées rouges. Si vous êtes vous même le propriétaire des armées rouges ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
//		missions.add(&quot;Vous devez détruire les armées bleues. Si vous êtes vous même le propriétaire des armées bleues ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
//		missions.add(&quot;Vous devez détruire les armées noires. Si vous êtes vous même le propriétaire des armées noires ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
//		missions.add(&quot;Vous devez détruire les armées violettes. Si vous êtes vous même le propriétaire des armées violettes ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
//		missions.add(&quot;Vous devez détruire les armées vertes. Si vous êtes vous même le propriétaire des armées vertes ou si le joueur qui en est\r\n&quot;
//				+ &quot;  propriétaire est éliminé par un autre joueur, votre but devient automatiquement de conquérir 24 territoires.&quot;);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDenStEe6vtI5bcBbkXg" name="getMissionListe" specification="_ut3bFHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDe3StEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>return missions;
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDfHStEe6vtI5bcBbkXg" name="sysout" specification="_ut4CIHStEe6vtI5bcBbkXg">
            <language>java</language>
            <body>for (int i = 0; i &lt; missions.size(); i++) {
		      System.out.println(missions.get(i));
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDfXStEe6vtI5bcBbkXg" name="getContent" specification="_ut4CIXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDfnStEe6vtI5bcBbkXg" name="i">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygDf3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return content = this.missions.get(i);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ut3bEHStEe6vtI5bcBbkXg" name="Mission" method="_uygDeHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ut3bEXStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ut3bEnStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ut3bE3StEe6vtI5bcBbkXg" type="_ut20AHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut3bFHStEe6vtI5bcBbkXg" name="getMissionListe" method="_uygDenStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux8CwHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut4CIHStEe6vtI5bcBbkXg" name="sysout" method="_uygDfHStEe6vtI5bcBbkXg"/>
          <ownedOperation xmi:id="_ut4CIXStEe6vtI5bcBbkXg" name="getContent" method="_uygDfXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut4CInStEe6vtI5bcBbkXg" name="i">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut4CI3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ut4pMHStEe6vtI5bcBbkXg" name="Monde">
          <ownedComment xmi:id="_uyjt5nStEe6vtI5bcBbkXg">
            <body>Classe Monde
Instancie l'ensemble des continents et leurs territoires</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyO9sXStEe6vtI5bcBbkXg" name="monde" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyyXUXStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyO9s3StEe6vtI5bcBbkXg" value="new ArrayList&lt;>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyO9tHStEe6vtI5bcBbkXg" name="nbTerritoireTotal" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyO9tXStEe6vtI5bcBbkXg" value="42"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDgHStEe6vtI5bcBbkXg" name="Monde" specification="_ut4pMXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDgXStEe6vtI5bcBbkXg" type="_ut4pMHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>/** Initialisation des territoires */
     Territoire ter101 = new Territoire(101, &quot;Alaska&quot;, 84, 105);
     Territoire ter102 = new Territoire(102, &quot;Territoire du Nord Ouest&quot;, 189, 106);
     Territoire ter103 = new Territoire(103, &quot;Alberta&quot;, 160, 146);
     Territoire ter104 = new Territoire(104, &quot;Ontario&quot;, 241, 155);
     Territoire ter105 = new Territoire(105, &quot;Quebec&quot;, 320, 149);
     Territoire ter106 = new Territoire(106, &quot;Etat de l'Ouest&quot;, 138, 204);
     Territoire ter107 = new Territoire(107, &quot;Etat de l'Est&quot;, 221, 228);
     Territoire ter108 = new Territoire(108, &quot;Amerique Centrale&quot;, 147, 294);
     Territoire ter109 = new Territoire(109, &quot;Groenland&quot;, 453, 64);
     
     Territoire ter201 = new Territoire(201, &quot;Venezuela&quot;, 264, 364);
     Territoire ter202 = new Territoire(202, &quot;Perou&quot;, 273, 455);
     Territoire ter203 = new Territoire(203, &quot;Bresil&quot;, 339, 436);
     Territoire ter204 = new Territoire(204, &quot;Argentine&quot;, 301, 547);
     
     Territoire ter301 = new Territoire(301, &quot;Afrique du Nord&quot;, 559, 306);
     Territoire ter302 = new Territoire(302, &quot;Egypte&quot;, 648, 270);
     Territoire ter303 = new Territoire(303, &quot;Congo&quot;, 646, 398);
     Territoire ter304 = new Territoire(304, &quot;Afrique Orientale&quot;, 695, 347);
     Territoire ter305 = new Territoire(305, &quot;Afrique du Sud&quot;, 650, 491);
     Territoire ter306 = new Territoire(306, &quot;Madagascar&quot;, 751, 474);
     
     Territoire ter401 = new Territoire(401, &quot;Europe Occidentale&quot;, 561, 195);
     Territoire ter402 = new Territoire(402, &quot;Grande Bretagne&quot;, 546, 151);
     Territoire ter403 = new Territoire(403, &quot;Islande&quot;, 506, 112);
     Territoire ter404 = new Territoire(404, &quot;Scandinavie&quot;, 614, 112);
     Territoire ter405 = new Territoire(405, &quot;Europe du Nord&quot;, 616, 162);
     Territoire ter406 = new Territoire(406, &quot;Europe de l'Est&quot;, 643, 194);
     Territoire ter407 = new Territoire(407, &quot;Ukraine&quot;, 703, 148);
     
     Territoire ter501 = new Territoire(501, &quot;Afghanistan&quot;, 803, 186);
     Territoire ter502 = new Territoire(502, &quot;Inde&quot;, 860, 272);
     Territoire ter503 = new Territoire(503, &quot;Oural&quot;, 804, 121);
     Territoire ter504 = new Territoire(504, &quot;Siberie&quot;, 871, 107);
     Territoire ter505 = new Territoire(505, &quot;Chine&quot;, 907, 228);
     Territoire ter506 = new Territoire(506, &quot;Japon&quot;, 1101, 222);
     Territoire ter507 = new Territoire(507, &quot;Moyen Orient&quot;, 730, 262);
     Territoire ter508 = new Territoire(508, &quot;Mongolie&quot;, 969, 188);
     Territoire ter509 = new Territoire(509, &quot;Tchita&quot;, 950, 146);
     Territoire ter510 = new Territoire(510, &quot;Yakoutie&quot;, 969, 106);
     Territoire ter511 = new Territoire(511, &quot;Kamchatka&quot;, 1076, 106);
     Territoire ter512 = new Territoire(512, &quot;Siam&quot;, 1076, 106);
     
     Territoire ter601 = new Territoire(601, &quot;Indonesie&quot;, 1034, 392);
     Territoire ter602 = new Territoire(602, &quot;Nouvelle Guinee&quot;, 1146, 420);
     Territoire ter603 = new Territoire(603, &quot;Australie Occidentale&quot;, 1052, 517);
     Territoire ter604 = new Territoire(604, &quot;Australie Orientale&quot;, 1147, 515);
     
     // Territoires voisin
     
     // Alaska
     ter101.ajouterVoisin(ter102); // Territoire du Nord Ouest
     ter101.ajouterVoisin(ter103); // Etat de l'Ouest
     ter101.ajouterVoisin(ter511); // Etat de l'Ouest

     // Territoire du Nord Ouest
     ter102.ajouterVoisin(ter101); // Alaska
     ter102.ajouterVoisin(ter103); // Alberta
     ter102.ajouterVoisin(ter104); // Etat de l'Ouest
     ter102.ajouterVoisin(ter109); // Etat de l'Est

     // Alberta
     ter103.ajouterVoisin(ter101); 
     ter103.ajouterVoisin(ter102); 
     ter103.ajouterVoisin(ter104); 
     ter103.ajouterVoisin(ter106);
     ter103.ajouterVoisin(ter107);

     // Ontario
     ter104.ajouterVoisin(ter102);
     ter104.ajouterVoisin(ter103); 
     ter104.ajouterVoisin(ter105);
     ter104.ajouterVoisin(ter106);
     ter104.ajouterVoisin(ter107);
     ter104.ajouterVoisin(ter109);

     // Quebec
     ter105.ajouterVoisin(ter109); 
     ter105.ajouterVoisin(ter104);
     ter105.ajouterVoisin(ter107);

     // Etat de l'Ouest
     ter106.ajouterVoisin(ter103); // Alaska
     ter106.ajouterVoisin(ter104); // Territoire du Nord Ouest
     ter106.ajouterVoisin(ter107); // Etat de l'Est
     ter106.ajouterVoisin(ter108); // Amerique Centrale

     // Etat de l'Est
     ter107.ajouterVoisin(ter104); // Territoire du Nord Ouest
     ter107.ajouterVoisin(ter105); // Etat de l'Ouest
     ter107.ajouterVoisin(ter106);
     ter107.ajouterVoisin(ter108); // Amerique Centrale

     // Amerique Centrale
     ter108.ajouterVoisin(ter106); // Etat de l'Ouest
     ter108.ajouterVoisin(ter107); // Etat de l'Est
     ter108.ajouterVoisin(ter201); // Perou
     
  // Perou
     ter201.ajouterVoisin(ter108); //  
     ter201.ajouterVoisin(ter203); // 
     ter201.ajouterVoisin(ter202); // 

     // Bresil
     ter203.ajouterVoisin(ter201); // 
     ter203.ajouterVoisin(ter202); // 
     ter203.ajouterVoisin(ter204); // 
     ter203.ajouterVoisin(ter301); 
     
     // Argentine
     ter204.ajouterVoisin(ter203); // 
     ter204.ajouterVoisin(ter202); // 

     // Afrique du Nord
     ter301.ajouterVoisin(ter203); // 
     ter301.ajouterVoisin(ter401); // 
     ter301.ajouterVoisin(ter303); // 
     ter301.ajouterVoisin(ter304); //  
     ter301.ajouterVoisin(ter302); // 
     
     ter303.ajouterVoisin(ter301);
     ter303.ajouterVoisin(ter304);
     ter303.ajouterVoisin(ter305);
     
     ter302.ajouterVoisin(ter301);
     ter302.ajouterVoisin(ter304);
     ter302.ajouterVoisin(ter507);
     ter302.ajouterVoisin(ter406);
     
  // Oural
     ter503.ajouterVoisin(ter501); // Afghanistan
     ter503.ajouterVoisin(ter502); // Inde
     ter503.ajouterVoisin(ter504); // Siberie

     // Siberie
     ter504.ajouterVoisin(ter502); // Inde
     ter504.ajouterVoisin(ter503); // Oural
     ter504.ajouterVoisin(ter505); // Chine
     ter504.ajouterVoisin(ter506); // Japon
     ter504.ajouterVoisin(ter510); // Yakoutie
     ter504.ajouterVoisin(ter511); // Kamchatka

     // Chine
     ter505.ajouterVoisin(ter502); // Inde
     ter505.ajouterVoisin(ter504); // Siberie
     ter505.ajouterVoisin(ter506); // Japon
     ter505.ajouterVoisin(ter507); // Moyen Orient
     ter505.ajouterVoisin(ter508); // Mongolie

     // Japon
     ter506.ajouterVoisin(ter502); // Inde
     ter506.ajouterVoisin(ter504); // Siberie
     ter506.ajouterVoisin(ter505); // Chine

     // Moyen Orient
     ter507.ajouterVoisin(ter505); // Chine
     ter507.ajouterVoisin(ter508); // Mongolie
     ter507.ajouterVoisin(ter510); // Yakoutie
     ter507.ajouterVoisin(ter512); // Siam

     // Mongolie
     ter508.ajouterVoisin(ter501); // Afghanistan
     ter508.ajouterVoisin(ter505); // Chine
     ter508.ajouterVoisin(ter507); // Moyen Orient
     ter508.ajouterVoisin(ter509); // Tchita
     ter508.ajouterVoisin(ter511); // Kamchatka

     // Tchita
     ter509.ajouterVoisin(ter508); // Mongolie
     ter509.ajouterVoisin(ter510); // Yakoutie
     ter509.ajouterVoisin(ter511); // Kamchatka

     // Yakoutie
     ter510.ajouterVoisin(ter504); // Siberie
     ter510.ajouterVoisin(ter507); // Moyen Orient
     ter510.ajouterVoisin(ter509); // Tchita
     ter510.ajouterVoisin(ter511); // Kamchatka

     // Kamchatka
     ter511.ajouterVoisin(ter504); // Siberie
     ter511.ajouterVoisin(ter508); // Mongolie
     ter511.ajouterVoisin(ter509); // Tchita
     ter511.ajouterVoisin(ter510); // Yakoutie
     ter511.ajouterVoisin(ter512); // Siam

     // Siam
     ter512.ajouterVoisin(ter507); // Moyen Orient
     ter512.ajouterVoisin(ter511); // Kamchatka

     // Indonesie
     ter601.ajouterVoisin(ter306); // Madagascar
     ter601.ajouterVoisin(ter602); // Nouvelle Guinee
     ter601.ajouterVoisin(ter603); // Australie Occidentale

     // Nouvelle Guinee
     ter602.ajouterVoisin(ter306); // Madagascar
     ter602.ajouterVoisin(ter601); // Indonesie
     ter602.ajouterVoisin(ter603); // Australie Occidentale

     // Australie Occidentale
     ter603.ajouterVoisin(ter601); // Indonesie
     ter603.ajouterVoisin(ter602); // Nouvelle Guinee
     ter603.ajouterVoisin(ter604); // Australie Orientale

     // Australie Orientale
     ter604.ajouterVoisin(ter603); // Australie Occidentale
     ter604.ajouterVoisin(ter504); // Siberie

     
     

    		
		/** Creation des listes de territoires par continents */
     // Amerique du Nord
     ArrayList&lt;Territoire> territoiresAmeriqueNord = new ArrayList&lt;>();
     territoiresAmeriqueNord.add(ter101);
     territoiresAmeriqueNord.add(ter102);
     territoiresAmeriqueNord.add(ter103);
     territoiresAmeriqueNord.add(ter104);
     territoiresAmeriqueNord.add(ter105);
     territoiresAmeriqueNord.add(ter106);
     territoiresAmeriqueNord.add(ter107);
     territoiresAmeriqueNord.add(ter108);
     territoiresAmeriqueNord.add(ter109);
     
     // Amerique du Sud
     ArrayList&lt;Territoire> territoiresAmeriqueSud = new ArrayList&lt;>();
     territoiresAmeriqueSud.add(ter201);
     territoiresAmeriqueSud.add(ter202);
     territoiresAmeriqueSud.add(ter203);
     territoiresAmeriqueSud.add(ter204);
     
     // Afrique
     ArrayList&lt;Territoire> territoiresAfrique = new ArrayList&lt;>();
     territoiresAfrique.add(ter301);
     territoiresAfrique.add(ter302);
     territoiresAfrique.add(ter303);
     territoiresAfrique.add(ter304);
     territoiresAfrique.add(ter305);
     territoiresAfrique.add(ter306);
     
     // Europe
     ArrayList&lt;Territoire> territoiresEurope = new ArrayList&lt;>();
     territoiresEurope.add(ter401);
     territoiresEurope.add(ter402);
     territoiresEurope.add(ter403);
     territoiresEurope.add(ter404);
     territoiresEurope.add(ter405);
     territoiresEurope.add(ter406);
     territoiresEurope.add(ter407);
     
     // Asie
     ArrayList&lt;Territoire> territoiresAsie = new ArrayList&lt;>();
     territoiresAsie.add(ter501);
     territoiresAsie.add(ter502);
     territoiresAsie.add(ter503);
     territoiresAsie.add(ter504);
     territoiresAsie.add(ter505);
     territoiresAsie.add(ter506);
     territoiresAsie.add(ter507);
     territoiresAsie.add(ter508);
     territoiresAsie.add(ter509);
     territoiresAsie.add(ter510);
     territoiresAsie.add(ter511);
     territoiresAsie.add(ter512);
     
     // Oceanie
     ArrayList&lt;Territoire> territoiresOceanie = new ArrayList&lt;>();
     territoiresOceanie.add(ter601);
     territoiresOceanie.add(ter602);
     territoiresOceanie.add(ter603);
     territoiresOceanie.add(ter604);
     
		/** Initialisation des continents */
		Continent europe = new Continent(&quot;Europe&quot;, territoiresEurope);
		Continent asie = new Continent(&quot;Asie&quot;, territoiresAsie);
		Continent oceanie = new Continent(&quot;Oceanie&quot;, territoiresOceanie);
		Continent afrique = new Continent(&quot;Afrique&quot;, territoiresAfrique);
		Continent ameriqueNord = new Continent(&quot;Amerique du Nord&quot;, territoiresAmeriqueNord);
		Continent ameriqueSud = new Continent(&quot;Amerique du Sud&quot;, territoiresAmeriqueSud);
		
		System.out.println(territoiresEurope);
		/** Ajout des continents à la liste finale (attribut monde) */
		this.monde.add(ameriqueSud);
		this.monde.add(ameriqueNord);
		this.monde.add(afrique);
		this.monde.add(europe);
		this.monde.add(oceanie);
		this.monde.add(asie);
		
		/** Insertion de l'attribut contienent de chaque territoire */
		for (Territoire territoire : ameriqueSud.getTerritoires()) {
			territoire.setContinent(ameriqueSud);
		}
		for (Territoire territoire : ameriqueNord.getTerritoires()) {
			territoire.setContinent(ameriqueNord);
		}
		for (Territoire territoire : afrique.getTerritoires()) {
			territoire.setContinent(afrique);
		}
		for (Territoire territoire : europe.getTerritoires()) {
			territoire.setContinent(europe);
		}
		for (Territoire territoire : oceanie.getTerritoires()) {
			territoire.setContinent(oceanie);
		}
		for (Territoire territoire : asie.getTerritoires()) {
			territoire.setContinent(asie);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDgnStEe6vtI5bcBbkXg" name="getNomContinent" specification="_ut4pNXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDg3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uygDhHStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] nomContinents = new String[6];
		for (int i = 0; i &lt; this.monde.size(); i++) {
			nomContinents[i] = this.monde.get(i).getNom();
		}
		return nomContinents;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDhXStEe6vtI5bcBbkXg" name="getNbTerritoireTotal" specification="_ut5QQ3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDhnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nbTerritoireTotal;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygDh3StEe6vtI5bcBbkXg" name="getTerritoires" specification="_ut5QRXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygDiHStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>// Liste finale des territoires
		ArrayList&lt;Territoire> territoires = new ArrayList&lt;>();
		// Parcours de chaque continent
		for (int i = 0; i &lt; this.monde.size(); i++) {
			// Parcours de chaque territoires
			Continent continent = this.monde.get(i);
			for (int j = 0; j &lt; continent.getTerritoires().size(); j++) {
				Territoire territoire = continent.getTerritoires().get(j);
	            territoires.add(territoire);
			}	
		}
		return territoires;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqgHStEe6vtI5bcBbkXg" name="toString" specification="_ut53UHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqgXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Monde [monde=&quot; + monde + &quot;, getMonde()=&quot; + getMonde() + &quot;, getTerritoires()=&quot; + getTerritoires() + &quot;]&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ut4pMXStEe6vtI5bcBbkXg" name="Monde" method="_uygDgHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ut4pMnStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ut4pM3StEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_uyjt53StEe6vtI5bcBbkXg">
              <body>Constructeur Monde
	 * Creation des objets territoire
	 * Creation des objets continent
	 * Ajout des continents à l'attribut monde (liste des continents)</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut4pNHStEe6vtI5bcBbkXg" type="_ut4pMHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut4pNXStEe6vtI5bcBbkXg" name="getNomContinent" method="_uygDgnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt6HStEe6vtI5bcBbkXg">
              <body>Getter nom continents
	 * @return ArrayLise&lt;String> monde</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut5QQHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ut5QQXStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut5QQ3StEe6vtI5bcBbkXg" name="getNbTerritoireTotal" method="_uygDhXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt6XStEe6vtI5bcBbkXg">
              <body>@return int nbTerritoireTotal</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut5QRHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut5QRXStEe6vtI5bcBbkXg" name="getTerritoires" method="_uygDh3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyjt6nStEe6vtI5bcBbkXg">
              <body>Retourne une liste contenant l'ensemble des territoires du monde, touut continent confondu
	 * 
	 * @return ArrayList&lt;Territoire></body>
            </ownedComment>
            <ownedParameter xmi:id="_ux8p0HStEe6vtI5bcBbkXg" type="_uxOREHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut53UHStEe6vtI5bcBbkXg" name="toString" method="_uygqgHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut53UXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ut53VXStEe6vtI5bcBbkXg" name="Regiment">
          <ownedAttribute xmi:id="_uyPkwHStEe6vtI5bcBbkXg" name="typeRegiment" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyPkwnStEe6vtI5bcBbkXg" name="nbRegiment">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqgnStEe6vtI5bcBbkXg" name="Regiment" specification="_ut6eYHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqg3StEe6vtI5bcBbkXg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqhHStEe6vtI5bcBbkXg" name="nbRegiment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqhXStEe6vtI5bcBbkXg" type="_ut53VXStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.typeRegiment = type;
		this.nbRegiment = nbRegiment;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqhnStEe6vtI5bcBbkXg" name="getType" specification="_ut6eZnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqh3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return typeRegiment;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqiHStEe6vtI5bcBbkXg" name="setType" specification="_ut6eaHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqiXStEe6vtI5bcBbkXg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.typeRegiment = typeRegiment;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ut6eYHStEe6vtI5bcBbkXg" name="Regiment" method="_uygqgnStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ut6eY3StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ut6eZHStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ut6eYXStEe6vtI5bcBbkXg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut6eYnStEe6vtI5bcBbkXg" name="nbRegiment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut6eZXStEe6vtI5bcBbkXg" type="_ut53VXStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut6eZnStEe6vtI5bcBbkXg" name="getType" method="_uygqhnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut6eZ3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut6eaHStEe6vtI5bcBbkXg" name="setType" method="_uygqiHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut6eaXStEe6vtI5bcBbkXg" name="type">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ut7FcHStEe6vtI5bcBbkXg" name="Territoire">
          <ownedComment xmi:id="_uykU4HStEe6vtI5bcBbkXg">
            <body>Objet Territoire</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyPkw3StEe6vtI5bcBbkXg" name="numero" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyPkxXStEe6vtI5bcBbkXg" name="nom" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyPkxnStEe6vtI5bcBbkXg" name="centreX" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyPkyHStEe6vtI5bcBbkXg" name="centreY" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyQL0HStEe6vtI5bcBbkXg" name="voisins" type="_uxOREHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyyXVHStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyQL0nStEe6vtI5bcBbkXg" name="occupant" type="_utp_sXStEe6vtI5bcBbkXg" association="_uykU4XStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyQL03StEe6vtI5bcBbkXg" name="nbRegiments" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyQL1XStEe6vtI5bcBbkXg" name="continent" type="_utmVUHStEe6vtI5bcBbkXg" association="_uykU43StEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqinStEe6vtI5bcBbkXg" name="Territoire" specification="_ut7FcXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqi3StEe6vtI5bcBbkXg" name="numero">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqjHStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqjXStEe6vtI5bcBbkXg" name="centreX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqjnStEe6vtI5bcBbkXg" name="centreY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqj3StEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.numero = numero;
		this.nom = nom;
		this.centreX = centreX;
		this.centreY = centreY;
		this.nbRegiments = 0;
		this.voisins = new ArrayList&lt;Territoire>();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqkHStEe6vtI5bcBbkXg" name="isInTerritory" specification="_ut7sg3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqkXStEe6vtI5bcBbkXg" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqknStEe6vtI5bcBbkXg" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqk3StEe6vtI5bcBbkXg" name="tolerance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uygqlHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>int distance = (int) Math.sqrt(Math.pow(x - centreX, 2) + Math.pow(y - centreY, 2));
     return distance &lt;= tolerance;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqlXStEe6vtI5bcBbkXg" name="getNumber" specification="_ut7siHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqlnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.numero;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygql3StEe6vtI5bcBbkXg" name="getNbRegiments" specification="_ut8TkHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqmHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return nbRegiments;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqmXStEe6vtI5bcBbkXg" name="setNbRegiments" specification="_ut8TknStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqmnStEe6vtI5bcBbkXg" name="nbRegiments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.nbRegiments = nbRegiments;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqm3StEe6vtI5bcBbkXg" name="ajouterNbRegiments" specification="_ut8TlHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqnHStEe6vtI5bcBbkXg" name="nbRegimentsAjoutes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.nbRegiments = this.nbRegiments + nbRegimentsAjoutes ;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqnXStEe6vtI5bcBbkXg" name="enleverNbRegiments" specification="_ut8TlnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqnnStEe6vtI5bcBbkXg" name="nbRegimentsAjoutes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.nbRegiments = this.nbRegiments - nbRegimentsAjoutes ;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uygqn3StEe6vtI5bcBbkXg" name="ajouterVoisin" specification="_uxldcHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uygqoHStEe6vtI5bcBbkXg" name="voisin" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>// Ajoute le territoire voisin � la liste des voisins
     this.voisins.add(voisin);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRkHStEe6vtI5bcBbkXg" name="toString" specification="_ut86oHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRkXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Territoire [nom=&quot; + nom + &quot;]&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ut7FcXStEe6vtI5bcBbkXg" name="Territoire" method="_uygqinStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ut7sgHStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ut7sgXStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_uyk78HStEe6vtI5bcBbkXg">
              <body>Constructeur
	 * @param numero 
	 * @param nom
	 * @param centreX
	 * @param centreY</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut7FcnStEe6vtI5bcBbkXg" name="numero">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7Fc3StEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7FdHStEe6vtI5bcBbkXg" name="centreX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7FdXStEe6vtI5bcBbkXg" name="centreY">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7sgnStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ut7sg3StEe6vtI5bcBbkXg" name="isInTerritory" method="_uygqkHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk78XStEe6vtI5bcBbkXg">
              <body>isInTerritory
     * @param x
     * @param y
     * @param tolerance
     * @return boolean is les coordonées sont dans le territoire</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut7shHStEe6vtI5bcBbkXg" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7shXStEe6vtI5bcBbkXg" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7shnStEe6vtI5bcBbkXg" name="tolerance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ut7sh3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut7siHStEe6vtI5bcBbkXg" name="getNumber" method="_uygqlXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk78nStEe6vtI5bcBbkXg">
              <body>Getter numero
     * @return numero</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut7siXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut8TkHStEe6vtI5bcBbkXg" name="getNbRegiments" method="_uygql3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk783StEe6vtI5bcBbkXg">
              <body>Getter nombre de régiment qu'à un joueur occupant sur un torritoire donné
	 * @return int nbRegiments</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut8TkXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut8TknStEe6vtI5bcBbkXg" name="setNbRegiments" method="_uygqmXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut8Tk3StEe6vtI5bcBbkXg" name="nbRegiments">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut8TlHStEe6vtI5bcBbkXg" name="ajouterNbRegiments" method="_uygqm3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk79HStEe6vtI5bcBbkXg">
              <body>Setter nombre de régiment qu'à un joueur occupant sur un territoire donné, ajout du nombre regiments à la valeur initiale
	 * @param nbRegiments</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut8TlXStEe6vtI5bcBbkXg" name="nbRegimentsAjoutes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut8TlnStEe6vtI5bcBbkXg" name="enleverNbRegiments" method="_uygqnXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk79XStEe6vtI5bcBbkXg">
              <body>Setter nombre de régiment qu'à un joueur occupant sur un territoire donné, retrait du nombre regiments à la valeur initiale
	 * @param nbRegiments</body>
            </ownedComment>
            <ownedParameter xmi:id="_ut8Tl3StEe6vtI5bcBbkXg" name="nbRegimentsAjoutes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ut86oHStEe6vtI5bcBbkXg" name="toString" method="_uyhRkHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut86oXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxldcHStEe6vtI5bcBbkXg" name="ajouterVoisin" method="_uygqn3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxldcXStEe6vtI5bcBbkXg" name="voisin" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ut-IwHStEe6vtI5bcBbkXg" name="Tour">
          <ownedAttribute xmi:id="_uyQy4HStEe6vtI5bcBbkXg" name="conflitMap" type="_uxQtUHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyy-YXStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyQy4nStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg" association="_uyk79nStEe6vtI5bcBbkXg"/>
          <ownedAttribute xmi:id="_uyQy43StEe6vtI5bcBbkXg" name="manche" type="_utzJoHStEe6vtI5bcBbkXg" isReadOnly="true" association="_uyy-ZHStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRknStEe6vtI5bcBbkXg" name="Tour" specification="_uxmEgHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRk3StEe6vtI5bcBbkXg" name="manche" type="_utzJoHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRlHStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRlXStEe6vtI5bcBbkXg" type="_ut-IwHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.manche=manche;
		this.joueur=joueur;
		int numero=0;
		HashMap&lt;Integer, Archive_Conflit> conflitMap = new HashMap&lt;>();
		while(numero!=-1||numero&lt;4) {
			numero=getPlayerChoice();
			if(numero!=-1) {
				numero++;
				Archive_Attaque attaque = new Archive_Attaque(joueur);
				Archive_Defense defense = new Archive_Defense(attaque);
				Archive_Conflit conflit = new Archive_Conflit(this,defense);
				conflitMap.put(numero, conflit);
			}
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRlnStEe6vtI5bcBbkXg" name="getPlayerChoice" specification="_ut-IwXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRl3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Scanner scanner = new Scanner(System.in);
	    System.out.print(&quot;Veuillez entrer votre choix (-1 signifie abandonner l'attaque) : &quot;);
	    
	    if (scanner.hasNextInt()) {
	        int choice = scanner.nextInt();
	        if (choice == -1) {
	            System.out.println(&quot;Le joueur choisit d'abandonner l'attaque&quot;);
	            return -1;
	        } else {
	            System.out.println(&quot;Le joueur choisit d'attaquer &quot;);
	            return choice;
	        }
	    } else {
	        System.out.println(&quot;Saisie invalide, veuillez saisir un entier ou -1 pour abandonner l'attaque.&quot;);
	        return getPlayerChoice(); // 递归调用，直到得到有效输入
	    }
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ut-IwXStEe6vtI5bcBbkXg" name="getPlayerChoice" method="_uyhRlnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ut-IwnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxmEgHStEe6vtI5bcBbkXg" name="Tour" method="_uyhRknStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_uxmEg3StEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_uxmEhHStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_uxmEgXStEe6vtI5bcBbkXg" name="manche" type="_utzJoHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxmEgnStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxmEhXStEe6vtI5bcBbkXg" type="_ut-IwHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_ut-v0HStEe6vtI5bcBbkXg" name="TypeRegiment">
          <ownedLiteral xmi:id="_ut-v0nStEe6vtI5bcBbkXg" name="Infanterie"/>
          <ownedLiteral xmi:id="_ut_W4HStEe6vtI5bcBbkXg" name="Cavalerie"/>
          <ownedLiteral xmi:id="_ut_W4XStEe6vtI5bcBbkXg" name="Artillerie"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uykU4XStEe6vtI5bcBbkXg" name="" memberEnd="_uyQL0nStEe6vtI5bcBbkXg _uykU4nStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uykU4nStEe6vtI5bcBbkXg" name="" type="_ut7FcHStEe6vtI5bcBbkXg" association="_uykU4XStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uykU43StEe6vtI5bcBbkXg" name="" memberEnd="_uyQL1XStEe6vtI5bcBbkXg _uykU5HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uykU5HStEe6vtI5bcBbkXg" name="" type="_ut7FcHStEe6vtI5bcBbkXg" association="_uykU43StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyk79nStEe6vtI5bcBbkXg" name="" memberEnd="_uyQy4nStEe6vtI5bcBbkXg _uyk793StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyk793StEe6vtI5bcBbkXg" name="" type="_ut-IwHStEe6vtI5bcBbkXg" association="_uyk79nStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyqbg3StEe6vtI5bcBbkXg" name="" memberEnd="_uyqbhHStEe6vtI5bcBbkXg _uyDXgXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyqbhHStEe6vtI5bcBbkXg" name="" type="_utUogHStEe6vtI5bcBbkXg" association="_uyqbg3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyqbhnStEe6vtI5bcBbkXg" name="" memberEnd="_uyqbh3StEe6vtI5bcBbkXg _uyDXg3StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyqbh3StEe6vtI5bcBbkXg" name="" type="_utUogHStEe6vtI5bcBbkXg" association="_uyqbhnStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrCkXStEe6vtI5bcBbkXg" name="" memberEnd="_uyrCknStEe6vtI5bcBbkXg _uyD-kHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrCknStEe6vtI5bcBbkXg" name="" type="_utUogHStEe6vtI5bcBbkXg" association="_uyrCkXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrClHStEe6vtI5bcBbkXg" name="" memberEnd="_uyrClXStEe6vtI5bcBbkXg _uyD-knStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrClXStEe6vtI5bcBbkXg" name="" type="_utUogHStEe6vtI5bcBbkXg" association="_uyrClHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrCl3StEe6vtI5bcBbkXg" name="" memberEnd="_uyrCmHStEe6vtI5bcBbkXg _uyEloHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrCmHStEe6vtI5bcBbkXg" name="" type="_utY58HStEe6vtI5bcBbkXg" association="_uyrCl3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrpoXStEe6vtI5bcBbkXg" name="" memberEnd="_uyrponStEe6vtI5bcBbkXg _uyEloXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrponStEe6vtI5bcBbkXg" name="" type="_utY58HStEe6vtI5bcBbkXg" association="_uyrpoXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrppHStEe6vtI5bcBbkXg" name="" memberEnd="_uyrppXStEe6vtI5bcBbkXg _uyElonStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrppXStEe6vtI5bcBbkXg" name="" type="_utY58HStEe6vtI5bcBbkXg" association="_uyrppHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyrpp3StEe6vtI5bcBbkXg" name="" memberEnd="_uyrpqHStEe6vtI5bcBbkXg _uyElpXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyrpqHStEe6vtI5bcBbkXg" name="" type="_utY58HStEe6vtI5bcBbkXg" association="_uyrpp3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uysQsXStEe6vtI5bcBbkXg" name="" memberEnd="_uysQsnStEe6vtI5bcBbkXg _uyFMtHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uysQsnStEe6vtI5bcBbkXg" name="" type="_utY58HStEe6vtI5bcBbkXg" association="_uysQsXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uysQtHStEe6vtI5bcBbkXg" name="" memberEnd="_uysQtXStEe6vtI5bcBbkXg _uyFMtnStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uysQtXStEe6vtI5bcBbkXg" name="" type="_utckUHStEe6vtI5bcBbkXg" association="_uysQtHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uys3wXStEe6vtI5bcBbkXg" name="" memberEnd="_uys3wnStEe6vtI5bcBbkXg _uyFMt3StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uys3wnStEe6vtI5bcBbkXg" name="" type="_utckUHStEe6vtI5bcBbkXg" association="_uys3wXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uys3xHStEe6vtI5bcBbkXg" name="" memberEnd="_uys3xXStEe6vtI5bcBbkXg _uyFzwXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uys3xXStEe6vtI5bcBbkXg" name="" type="_utckUHStEe6vtI5bcBbkXg" association="_uys3xHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uys3x3StEe6vtI5bcBbkXg" name="" memberEnd="_uys3yHStEe6vtI5bcBbkXg _uyFzxXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uys3yHStEe6vtI5bcBbkXg" name="" type="_utckUHStEe6vtI5bcBbkXg" association="_uys3x3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyte0XStEe6vtI5bcBbkXg" name="" memberEnd="_uyte0nStEe6vtI5bcBbkXg _uyGa0HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyte0nStEe6vtI5bcBbkXg" name="" type="_utfnoHStEe6vtI5bcBbkXg" association="_uyte0XStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyte1HStEe6vtI5bcBbkXg" name="" memberEnd="_uyte1XStEe6vtI5bcBbkXg _uyGa0nStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyte1XStEe6vtI5bcBbkXg" name="" type="_utg1wHStEe6vtI5bcBbkXg" association="_uyte1HStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyuF4HStEe6vtI5bcBbkXg" name="" memberEnd="_uyuF4XStEe6vtI5bcBbkXg _uyHB4HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyuF4XStEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyuF4HStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyuF43StEe6vtI5bcBbkXg" name="" memberEnd="_uyuF5HStEe6vtI5bcBbkXg _uyHB4XStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyuF5HStEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyuF43StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyus8HStEe6vtI5bcBbkXg" name="" memberEnd="_uyus8XStEe6vtI5bcBbkXg _uyHB4nStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyus8XStEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyus8HStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyus83StEe6vtI5bcBbkXg" name="" memberEnd="_uyus9HStEe6vtI5bcBbkXg _uyHB43StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyus9HStEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyus83StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyus9nStEe6vtI5bcBbkXg" name="" memberEnd="_uyus93StEe6vtI5bcBbkXg _uyHB5nStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyus93StEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyus9nStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyvUAXStEe6vtI5bcBbkXg" name="" memberEnd="_uyvUAnStEe6vtI5bcBbkXg _uyHo8XStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyvUAnStEe6vtI5bcBbkXg" name="" type="_utiD4HStEe6vtI5bcBbkXg" association="_uyvUAXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyvUBHStEe6vtI5bcBbkXg" name="" memberEnd="_uyvUBXStEe6vtI5bcBbkXg _uyIQAXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyvUBXStEe6vtI5bcBbkXg" name="" type="_utmVUHStEe6vtI5bcBbkXg" association="_uyvUBHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyvUB3StEe6vtI5bcBbkXg" name="" memberEnd="_uyvUCHStEe6vtI5bcBbkXg _uyI3EXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyvUCHStEe6vtI5bcBbkXg" name="" type="_utoKgHStEe6vtI5bcBbkXg" association="_uyvUB3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyv7EXStEe6vtI5bcBbkXg" name="" memberEnd="_uyv7EnStEe6vtI5bcBbkXg _uyI3FXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyv7EnStEe6vtI5bcBbkXg" name="" type="_utoxkHStEe6vtI5bcBbkXg" association="_uyv7EXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyv7FHStEe6vtI5bcBbkXg" name="" memberEnd="_uyv7FXStEe6vtI5bcBbkXg _uyKFNXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyv7FXStEe6vtI5bcBbkXg" name="" type="_utp_sXStEe6vtI5bcBbkXg" association="_uyv7FHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uywiIXStEe6vtI5bcBbkXg" name="" memberEnd="_uywiInStEe6vtI5bcBbkXg _uyLTWXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uywiInStEe6vtI5bcBbkXg" name="" type="_utp_sXStEe6vtI5bcBbkXg" association="_uywiIXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uywiJHStEe6vtI5bcBbkXg" name="" memberEnd="_uywiJXStEe6vtI5bcBbkXg _uyMhcXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uywiJXStEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uywiJHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxJMHStEe6vtI5bcBbkXg" name="" memberEnd="_uyxJMXStEe6vtI5bcBbkXg _uyMhdXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxJMXStEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uyxJMHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxJM3StEe6vtI5bcBbkXg" name="" memberEnd="_uyxJNHStEe6vtI5bcBbkXg _uyMhd3StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxJNHStEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uyxJM3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxJNnStEe6vtI5bcBbkXg" name="" memberEnd="_uyxJN3StEe6vtI5bcBbkXg _uyNIgHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxJN3StEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uyxJNnStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxwQXStEe6vtI5bcBbkXg" name="" memberEnd="_uyxwQnStEe6vtI5bcBbkXg _uyNIhXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxwQnStEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uyxwQXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxwRHStEe6vtI5bcBbkXg" name="" memberEnd="_uyxwRXStEe6vtI5bcBbkXg _uyNvkHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxwRXStEe6vtI5bcBbkXg" name="" type="_utzJoHStEe6vtI5bcBbkXg" association="_uyxwRHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyxwR3StEe6vtI5bcBbkXg" name="" memberEnd="_uyxwSHStEe6vtI5bcBbkXg _uyOWonStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyxwSHStEe6vtI5bcBbkXg" name="" type="_ut20AHStEe6vtI5bcBbkXg" association="_uyxwR3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyyXUXStEe6vtI5bcBbkXg" name="" memberEnd="_uyyXUnStEe6vtI5bcBbkXg _uyO9sXStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyyXUnStEe6vtI5bcBbkXg" name="" type="_ut4pMHStEe6vtI5bcBbkXg" association="_uyyXUXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyyXVHStEe6vtI5bcBbkXg" name="" memberEnd="_uyyXVXStEe6vtI5bcBbkXg _uyQL0HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyyXVXStEe6vtI5bcBbkXg" name="" type="_ut7FcHStEe6vtI5bcBbkXg" association="_uyyXVHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyy-YXStEe6vtI5bcBbkXg" name="" memberEnd="_uyy-YnStEe6vtI5bcBbkXg _uyQy4HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyy-YnStEe6vtI5bcBbkXg" name="" type="_ut-IwHStEe6vtI5bcBbkXg" association="_uyy-YXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyy-ZHStEe6vtI5bcBbkXg" name="" memberEnd="_uyy-ZXStEe6vtI5bcBbkXg _uyQy43StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyy-ZXStEe6vtI5bcBbkXg" name="" type="_ut-IwHStEe6vtI5bcBbkXg" association="_uyy-ZHStEe6vtI5bcBbkXg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_usUi8HStEe6vtI5bcBbkXg" name="vue">
        <packagedElement xmi:type="uml:Class" xmi:id="_ut_W4nStEe6vtI5bcBbkXg" name="Fenetre">
          <ownedComment xmi:id="_uyk7-HStEe6vtI5bcBbkXg">
            <body>Objet fenêtre</body>
          </ownedComment>
          <ownedAttribute xmi:id="_uyQy5HStEe6vtI5bcBbkXg" name="frame" visibility="private" type="_ux9Q4HStEe6vtI5bcBbkXg" association="_uyzlcXStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyQy5XStEe6vtI5bcBbkXg" value="new JFrame(&quot;Risk&quot;)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyRZ8XStEe6vtI5bcBbkXg" name="map" visibility="package" type="_ux938XStEe6vtI5bcBbkXg" association="_uyzldHStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyRZ8nStEe6vtI5bcBbkXg" value="new ImageIcon(&quot;./img/map4.jpg&quot;)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyRZ9HStEe6vtI5bcBbkXg" name="mapLabel" visibility="package" type="_ux-fAHStEe6vtI5bcBbkXg" association="_uyzld3StEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyRZ9XStEe6vtI5bcBbkXg" value="new JLabel(map)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyRZ93StEe6vtI5bcBbkXg" name="label" visibility="package" type="_ux-fAHStEe6vtI5bcBbkXg" association="_uy0MgXStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uyRZ-HStEe6vtI5bcBbkXg" value="new JLabel(&quot;&quot;)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uyRZ-nStEe6vtI5bcBbkXg" name="territoires" visibility="package" type="_uxOREHStEe6vtI5bcBbkXg" association="_uy0MhHStEe6vtI5bcBbkXg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uySBAXStEe6vtI5bcBbkXg" value="new ArrayList&lt;>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uySBA3StEe6vtI5bcBbkXg" name="seuil" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_uySBBHStEe6vtI5bcBbkXg" value="20"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRmHStEe6vtI5bcBbkXg" name="Fenetre" specification="_ux-fAnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRmXStEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRmnStEe6vtI5bcBbkXg" type="_ut_W4nStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>//TODO Affichage dynamique des tours&#xD;
 	this.territoires = territoires;&#xD;
     frame.add(mapLabel);&#xD;
     frame.add(label, BorderLayout.SOUTH);&#xD;
     frame.setSize(1230, 650);&#xD;
     frame.setResizable(false);&#xD;
     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
     frame.setVisible(true);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRm3StEe6vtI5bcBbkXg" name="actualiserTour" specification="_uxpH0HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRnHStEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>this.label.setText(tour.getJoueur().getNom());&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRnXStEe6vtI5bcBbkXg" name="premierTour" specification="_uxpH0nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRnnStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRn3StEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRoHStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>//Actualisation de l'affichage&#xD;
 	boolean validationTroupe = false;&#xD;
 	int nbTroupes = 0;&#xD;
 	while(!validationTroupe) {&#xD;
	        this.label.setText(&quot;             Joueur &quot;  + joueur.getId() + &quot;\n&quot; + joueur.getAllTerritoiresClear());&#xD;
	        JPanel panel = new JPanel();&#xD;
	        JLabel terrLab = new JLabel( territoire.getNumber() + &quot; : &quot; + territoire.getNom() + &quot; | &quot; );&#xD;
	        JLabel label = new JLabel(&quot;Joueur&quot; + joueur.getId() + &quot; | Voulez-vous ajouter des troupes ? | &quot; + joueur.getNbRegimentsRestants() + &quot; regiments restants&quot;);&#xD;
	        JTextField textField = new JTextField(10);&#xD;
	        &#xD;
	&#xD;
	        panel.add(terrLab);&#xD;
	        panel.add(label);&#xD;
	        if (joueur.getNbRegimentsRestants() != 0) {&#xD;
	        	panel.add(textField);&#xD;
	        }&#xD;
	        &#xD;
	&#xD;
	        int option = JOptionPane.showConfirmDialog(null, panel, &quot;Ajouter des troupes&quot;, JOptionPane.OK_CANCEL_OPTION);&#xD;
	&#xD;
	        if (option == JOptionPane.OK_OPTION) {&#xD;
	            try {&#xD;
	                    String input = textField.getText();&#xD;
	        	        if (joueur.getNbRegimentsRestants() != 0) {&#xD;
	        	        	nbTroupes = Integer.parseInt(input);&#xD;
	        	        }&#xD;
	                    if (joueur.getNbRegimentsRestants() >= nbTroupes) {&#xD;
	                    	if (nbTroupes != 0) {&#xD;
	                    		JOptionPane.showMessageDialog(null, &quot;Vous avez saisi &quot; + nbTroupes + &quot; troupes.&quot;);&#xD;
	                    	}&#xD;
	                    	validationTroupe = true;&#xD;
	                    } else if(joueur.getNbRegimentsRestants() == 0) {&#xD;
	                    	nbTroupes = 0;&#xD;
	                    	validationTroupe = true;&#xD;
	                    } else {&#xD;
	                    	JOptionPane.showMessageDialog(null, &quot;Vous n'avez plus de troupes à ajouter ou le nombre saisi est trop élevé&quot;);&#xD;
	                    }&#xD;
	            } catch (NumberFormatException e) {&#xD;
	                JOptionPane.showMessageDialog(null, &quot;Saisie invalide. Veuillez entrer un nombre valide.&quot;);&#xD;
	            }&#xD;
	        }&#xD;
 	}&#xD;
     return nbTroupes;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRoXStEe6vtI5bcBbkXg" name="actionsTour" specification="_uxpH1nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRonStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRo3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>final int[] choix = { 0 };&#xD;
     this.label.setText(&quot;             &quot;  + joueur.getNom());&#xD;
     frame.addMouseListener(new MouseListener() {&#xD;
         public void mouseClicked(MouseEvent e) {&#xD;
         	&#xD;
             int x = e.getX();&#xD;
             int y = e.getY();&#xD;
             &#xD;
             for (Territoire territoire : territoires) {&#xD;
             	if (territoire.isInTerritory(x, y, seuil) ) {&#xD;
             		choix[0] = choixJoueurTour(territoire, joueur);&#xD;
             	} else {&#xD;
             		choix[0] = 0;&#xD;
             	};&#xD;
             }  &#xD;
         }&#xD;
			@Override&#xD;
			public void mousePressed(MouseEvent e) {}&#xD;
&#xD;
			@Override&#xD;
			public void mouseReleased(MouseEvent e) {}&#xD;
&#xD;
			@Override&#xD;
			public void mouseEntered(MouseEvent e) {}&#xD;
&#xD;
			@Override&#xD;
			public void mouseExited(MouseEvent e) {}&#xD;
     });&#xD;
     return choix[0];&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRpHStEe6vtI5bcBbkXg" name="choixJoueurTour" specification="_uxpH2XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRpXStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRpnStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRp3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] options = {&quot;Attaquer&quot;, &quot;Déplacer&quot;, &quot;Passer tour&quot;};&#xD;
     int choice = JOptionPane.showOptionDialog(frame, territoire.getNumber() + &quot; : &quot; + territoire.getNom() + &quot;\n Occupant : &quot; &#xD;
     + territoire.getOccupant().getNom() + &quot;\n Choisissez une action &quot;, &quot;Action&quot;, JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);&#xD;
&#xD;
     if (choice == 0) {&#xD;
         JOptionPane.showMessageDialog(frame, &quot;Vous avez choisi d'attaquer \n Cliquez maintenant sur le pays que vous souhaitez attaquer&quot;);&#xD;
         int option = JOptionPane.showConfirmDialog(null, frame, &quot;Ajouter des troupes&quot;, JOptionPane.OK_CANCEL_OPTION);&#xD;
         frame.addMouseListener(new MouseListener() {&#xD;
             public void mouseClicked(MouseEvent e) {&#xD;
             	&#xD;
                 int x = e.getX();&#xD;
                 int y = e.getY();&#xD;
                 &#xD;
                 for (Territoire territoire : territoires) {&#xD;
                 	if (territoire.isInTerritory(x, y, seuil) ) {&#xD;
                 		if (territoire.getOccupant() == joueur) {&#xD;
                 			System.out.println(&quot;Vous ne pouvez pas attaquer votre propre territoire&quot;);&#xD;
                 		}&#xD;
                 		else {&#xD;
                 			System.out.println(&quot;Vous avez choisi d'attaquer le territoire de : &quot; + territoire.getOccupant().getNom());&#xD;
                 			System.out.println(territoire.getNumber() + &quot; : &quot; + territoire.getNom());&#xD;
                 		}&#xD;
                 	};&#xD;
                 }  &#xD;
             }&#xD;
 			@Override&#xD;
 			public void mousePressed(MouseEvent e) {}&#xD;
&#xD;
 			@Override&#xD;
 			public void mouseReleased(MouseEvent e) {}&#xD;
&#xD;
 			@Override&#xD;
 			public void mouseEntered(MouseEvent e) {}&#xD;
&#xD;
 			@Override&#xD;
 			public void mouseExited(MouseEvent e) {}&#xD;
         });&#xD;
         return 1;&#xD;
     } else if (choice == 1) {&#xD;
         JOptionPane.showMessageDialog(frame, &quot;Vous avez choisi de déplacer \n Cliquez maintenant sur le pays depuis lequel vous voulez déplacer&quot;);&#xD;
         return 2;&#xD;
     } else if (choice == 2) {&#xD;
         JOptionPane.showMessageDialog(frame, &quot;Vous avez choisi de passer votre tour&quot;);&#xD;
         return 3;&#xD;
     }&#xD;
     return 0;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyhRqHStEe6vtI5bcBbkXg" name="tour" specification="_uxpu4nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyhRqXStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyhRqnStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean validationTroupe = false;&#xD;
     int choix = 0;&#xD;
     &#xD;
     while (!validationTroupe) {&#xD;
         this.label.setText(&quot;             Joueur &quot; + joueur.getId() + &quot;\n&quot; + joueur.getAllTerritoiresClear());&#xD;
&#xD;
         // Utilisation de JOptionPane pour afficher les options&#xD;
         Object[] options = {&quot;Déplacer&quot;, &quot;Attaquer&quot;, &quot;Passer tour&quot;};&#xD;
         int choice = JOptionPane.showOptionDialog(null, &quot;Que voulez-vous faire ?&quot;, &quot;Choix d'action&quot;,&#xD;
                 JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[2]);&#xD;
&#xD;
         // Traitement de la sélection de l'utilisateur&#xD;
         if (choice == 0) {&#xD;
             // Déplacer&#xD;
         	choix = 1;&#xD;
             validationTroupe = true;&#xD;
         } else if (choice == 1) {&#xD;
             // Attaquer&#xD;
             choix = 2;&#xD;
             validationTroupe = true;&#xD;
         } else if (choice == 2) {&#xD;
             // Passer tour&#xD;
             choix = 3; // Mettez le nombre de troupes à 0 (ou autre logique)&#xD;
             validationTroupe = true;&#xD;
         }&#xD;
     }&#xD;
     return choix;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4oHStEe6vtI5bcBbkXg" name="attaque" specification="_uxqV8XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4oXStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4onStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.label.setText(&quot;             Joueur &quot; + joueur.getId() + &quot;\n&quot; + joueur.getAllTerritoiresClearNumero() + &quot; Choisissez le territoire attaquant&quot;);&#xD;
     final Territoire[] terAttaque = new Territoire[1]; // Utilisation d'un tableau pour stocker le résultat&#xD;
&#xD;
     while (true) {&#xD;
         CountDownLatch clickWait = new CountDownLatch(1); // Attendre le clic&#xD;
&#xD;
         frame.addMouseListener(new MouseListener() {&#xD;
             public void mouseClicked(MouseEvent e) {&#xD;
                 int x = e.getX();&#xD;
                 int y = e.getY();&#xD;
&#xD;
                 for (Territoire territoire : territoires) {&#xD;
                     if (territoire.isInTerritory(x, y, seuil) &amp;&amp; (territoire.getOccupant() == joueur) &amp;&amp; territoire.getNbRegiments() > 1) {&#xD;
                         System.out.println(territoire.getNumber() + &quot; : &quot; + territoire.getNom());&#xD;
                         terAttaque[0] = territoire;&#xD;
                         clickWait.countDown();&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mousePressed(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseReleased(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseEntered(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseExited(MouseEvent e) {&#xD;
             }&#xD;
         });&#xD;
&#xD;
         try {&#xD;
             // Attente de l'action utilisateur&#xD;
             clickWait.await();&#xD;
         } catch (InterruptedException e) {&#xD;
             e.printStackTrace();&#xD;
         }&#xD;
&#xD;
         // Suite du code&#xD;
         System.out.println(&quot;Suite du code après le clic.&quot;);&#xD;
         break;&#xD;
     }&#xD;
     return terAttaque[0];&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4o3StEe6vtI5bcBbkXg" name="defense" specification="_uxqV9HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4pHStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4pXStEe6vtI5bcBbkXg" name="attaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4pnStEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>this.label.setText(&quot;             Joueur &quot; + joueur.getId() + &quot;\n&quot; + joueur.getAllTerritoiresClearNumero() + &quot; Choisissez le territoire attaqué&quot;);&#xD;
     final Territoire[] terDefense = new Territoire[1]; // Utilisation d'un tableau pour stocker le résultat&#xD;
     while (true) {&#xD;
         CountDownLatch clickWait = new CountDownLatch(1); // Attendre le click&#xD;
&#xD;
         frame.addMouseListener(new MouseListener() {&#xD;
             public void mouseClicked(MouseEvent e) {&#xD;
                 int x = e.getX();&#xD;
                 int y = e.getY();&#xD;
&#xD;
                 for (Territoire territoire : territoires) {&#xD;
                     if (territoire.isInTerritory(x, y, seuil)) { //&amp;&amp; territoire.getVoisins().contains(attaquant) TODO ajouter ça lorsque les voisins sont config&#xD;
                     	terDefense[0] = territoire;&#xD;
                         clickWait.countDown();&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mousePressed(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseReleased(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseEntered(MouseEvent e) {&#xD;
             }&#xD;
&#xD;
             @Override&#xD;
             public void mouseExited(MouseEvent e) {&#xD;
             }&#xD;
         });&#xD;
&#xD;
         try {&#xD;
             // Attende de l'action utilisateur&#xD;
             clickWait.await();&#xD;
         } catch (InterruptedException e) {&#xD;
             e.printStackTrace();&#xD;
         }&#xD;
&#xD;
         // Suite du code&#xD;
         break;&#xD;
     }&#xD;
     return terDefense[0];&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4p3StEe6vtI5bcBbkXg" name="choisirNbTroupes" specification="_uxqV-HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4qHStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4qXStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4qnStEe6vtI5bcBbkXg" name="isAttaque">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyh4q3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>//Actualisation de l'affichage&#xD;
 	boolean validationTroupe = false;&#xD;
 	String word = &quot;attaque&quot;;&#xD;
 	String max = &quot; (max 3) &quot;;&#xD;
 	if (!isAttaque) {&#xD;
 		word = &quot;defense&quot;;&#xD;
 		max = &quot; (max 2) &quot;;&#xD;
 	}&#xD;
 	&#xD;
 	int nbTroupes = 0;&#xD;
 	while(!validationTroupe) {&#xD;
	        this.label.setText(&quot;             Joueur &quot;  + joueur.getId() + &quot;\n&quot; + joueur.getAllTerritoiresClear());&#xD;
	        JPanel panel = new JPanel();&#xD;
	        JLabel terrLab = new JLabel( territoire.getNumber() + &quot; : &quot; + territoire.getNom() + &quot; | &quot; );&#xD;
	        JLabel label = new JLabel(&quot;Joueur&quot; + joueur.getId() + &quot; | Nombre de troupes pour &quot; + word + max + &quot; | &quot; + territoire.getNbRegiments() + &quot; regiments disponibles&quot;);&#xD;
	        JTextField textField = new JTextField(10);&#xD;
	        &#xD;
	&#xD;
	        panel.add(terrLab);&#xD;
	        panel.add(label);&#xD;
	        panel.add(textField);&#xD;
	        &#xD;
	&#xD;
	        int option = JOptionPane.showConfirmDialog(null, panel, &quot;Paramètres &quot; + word, JOptionPane.OK_CANCEL_OPTION);&#xD;
	&#xD;
	        if (option == JOptionPane.OK_OPTION) {&#xD;
	            try {&#xD;
	                    String input = textField.getText();&#xD;
	        	        nbTroupes = Integer.parseInt(input);&#xD;
	        	        if (!isAttaque) {&#xD;
	        	        	if (nbTroupes &lt;= 2) {&#xD;
	                    		JOptionPane.showMessageDialog(null, &quot;Vous défendez avec &quot; + nbTroupes + &quot; troupes.&quot;);&#xD;
	                    		validationTroupe = true;&#xD;
	        	        	}&#xD;
	        	        } else if (territoire.getNbRegiments() > nbTroupes &amp;&amp; nbTroupes &lt;= 3) {&#xD;
	                    	if (nbTroupes != 0) {&#xD;
	                    		JOptionPane.showMessageDialog(null, &quot;Vous attaquez avec &quot; + nbTroupes + &quot; troupes.&quot;);&#xD;
	                    		validationTroupe = true;&#xD;
	                    	}&#xD;
	                    } else {&#xD;
	                    	JOptionPane.showMessageDialog(null, &quot;Vous n'avez pas assez de troupes ou le nombre saisi est trop élevé&quot;);&#xD;
	                    }&#xD;
	            } catch (NumberFormatException e) {&#xD;
	                JOptionPane.showMessageDialog(null, &quot;Saisie invalide. Veuillez entrer un nombre valide.&quot;);&#xD;
	            }&#xD;
	        }&#xD;
 	}&#xD;
     return nbTroupes;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4rHStEe6vtI5bcBbkXg" name="afficherDes" specification="_ux_GFHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4rXStEe6vtI5bcBbkXg" name="TirageAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4rnStEe6vtI5bcBbkXg" name="TirageDefense" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4r3StEe6vtI5bcBbkXg" name="terAtt" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4sHStEe6vtI5bcBbkXg" name="terDef" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>JOptionPane.showMessageDialog(null, &quot;Tirages \n &quot; + &quot;Tirage attaquant : &quot; + TirageAttaque + &quot;\n&quot; + &quot;Tirage Défense : &quot; + TirageDefense , &quot;Tirage&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4sXStEe6vtI5bcBbkXg" name="afficherResultats" specification="_uxrkEHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4snStEe6vtI5bcBbkXg" name="NbRegimentsAtk">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyh4s3StEe6vtI5bcBbkXg" name="NbRegimentsDef">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyh4tHStEe6vtI5bcBbkXg" name="terAtq" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyh4tXStEe6vtI5bcBbkXg" name="terDef" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>JOptionPane.showMessageDialog(null, &quot;Bilan attaque \n &quot; + &#xD;
							    &quot;Territoire attaquant : &quot; + terAtq.getNom() + &quot; : &quot; + NbRegimentsAtk + &quot; troupes restantes&quot;  +  &quot;\n&quot; + &#xD;
							    &quot;Territoire defense : &quot; + terDef.getNom() + &quot; : &quot; + NbRegimentsDef + &quot; troupes restantes&quot;  +  &quot;\n&quot;&#xD;
							    , &quot;Bilan attaque&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyh4tnStEe6vtI5bcBbkXg" name="setTerritoires" specification="_uyAUMHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyh4t3StEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>this.territoires = territoires;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uxpH0HStEe6vtI5bcBbkXg" name="actualiserTour" method="_uyhRm3StEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7-nStEe6vtI5bcBbkXg">
              <body>@param tour</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxpH0XStEe6vtI5bcBbkXg" name="tour" type="_ut-IwHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxpH0nStEe6vtI5bcBbkXg" name="premierTour" method="_uyhRnXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7-3StEe6vtI5bcBbkXg">
              <body>Gestion des interraction pour le premier tour&#xD;
     * @param joueur&#xD;
     * @param territoire &#xD;
     * @return nbTroupe à ajouter</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxpH03StEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxpH1HStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxpH1XStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxpH1nStEe6vtI5bcBbkXg" name="actionsTour" method="_uyhRoXStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7_HStEe6vtI5bcBbkXg">
              <body>Méthode à invoker pour permettre à un joueur d'effectuer ses actions dans un tour&#xD;
     * @param joueur</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxpH13StEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxpH2HStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxpH2XStEe6vtI5bcBbkXg" name="choixJoueurTour" method="_uyhRpHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7_XStEe6vtI5bcBbkXg">
              <body>@param territoire</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxpH2nStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxpu4HStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxpu4XStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxpu4nStEe6vtI5bcBbkXg" name="tour" method="_uyhRqHStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7_nStEe6vtI5bcBbkXg">
              <body>Gestion des interraction pour le premier tour&#xD;
     * @param joueur&#xD;
     * @param territoire &#xD;
     * @return nbTroupe à ajouter</body>
            </ownedComment>
            <ownedParameter xmi:id="_uxpu43StEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxqV8HStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxqV8XStEe6vtI5bcBbkXg" name="attaque" method="_uyh4oHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxqV8nStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxqV83StEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxqV9HStEe6vtI5bcBbkXg" name="defense" method="_uyh4o3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxqV9XStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxqV9nStEe6vtI5bcBbkXg" name="attaquant" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxqV93StEe6vtI5bcBbkXg" type="_ut7FcHStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uxqV-HStEe6vtI5bcBbkXg" name="choisirNbTroupes" method="_uyh4p3StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxqV-XStEe6vtI5bcBbkXg" name="joueur" type="_utp_sXStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxqV-nStEe6vtI5bcBbkXg" name="territoire" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxq9AHStEe6vtI5bcBbkXg" name="isAttaque">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxq9AXStEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxrkEHStEe6vtI5bcBbkXg" name="afficherResultats" method="_uyh4sXStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxrkEXStEe6vtI5bcBbkXg" name="NbRegimentsAtk">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxsLIHStEe6vtI5bcBbkXg" name="NbRegimentsDef">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxsLIXStEe6vtI5bcBbkXg" name="terAtq" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxsLInStEe6vtI5bcBbkXg" name="terDef" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ux-fAnStEe6vtI5bcBbkXg" name="Fenetre" method="_uyhRmHStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_ux_GEHStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ux_GEXStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_uyk7-XStEe6vtI5bcBbkXg">
              <body>Constructeur&#xD;
     * @param territoires</body>
            </ownedComment>
            <ownedParameter xmi:id="_ux-fA3StEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux_GEnStEe6vtI5bcBbkXg" type="_ut_W4nStEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ux_GFHStEe6vtI5bcBbkXg" name="afficherDes" method="_uyh4rHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_ux_GFXStEe6vtI5bcBbkXg" name="TirageAttaque" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux_GFnStEe6vtI5bcBbkXg" name="TirageDefense" type="_uxOREHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux_GF3StEe6vtI5bcBbkXg" name="terAtt" type="_ut7FcHStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_ux_GGHStEe6vtI5bcBbkXg" name="terDef" type="_ut7FcHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uyAUMHStEe6vtI5bcBbkXg" name="setTerritoires" method="_uyh4tnStEe6vtI5bcBbkXg">
            <ownedComment xmi:id="_uyk7_3StEe6vtI5bcBbkXg">
              <body>setter des territoires&#xD;
     * @param territoires</body>
            </ownedComment>
            <ownedParameter xmi:id="_uyAUMXStEe6vtI5bcBbkXg" name="territoires" type="_uxOREHStEe6vtI5bcBbkXg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyzlcXStEe6vtI5bcBbkXg" name="" memberEnd="_uyzlcnStEe6vtI5bcBbkXg _uyQy5HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyzlcnStEe6vtI5bcBbkXg" name="" type="_ut_W4nStEe6vtI5bcBbkXg" association="_uyzlcXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyzldHStEe6vtI5bcBbkXg" name="" memberEnd="_uyzldXStEe6vtI5bcBbkXg _uyRZ8XStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyzldXStEe6vtI5bcBbkXg" name="" type="_ut_W4nStEe6vtI5bcBbkXg" association="_uyzldHStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyzld3StEe6vtI5bcBbkXg" name="" memberEnd="_uyzleHStEe6vtI5bcBbkXg _uyRZ9HStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyzleHStEe6vtI5bcBbkXg" name="" type="_ut_W4nStEe6vtI5bcBbkXg" association="_uyzld3StEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uy0MgXStEe6vtI5bcBbkXg" name="" memberEnd="_uy0MgnStEe6vtI5bcBbkXg _uyRZ93StEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uy0MgnStEe6vtI5bcBbkXg" name="" type="_ut_W4nStEe6vtI5bcBbkXg" association="_uy0MgXStEe6vtI5bcBbkXg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uy0MhHStEe6vtI5bcBbkXg" name="" memberEnd="_uy0MhXStEe6vtI5bcBbkXg _uyRZ-nStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uy0MhXStEe6vtI5bcBbkXg" name="" type="_ut_W4nStEe6vtI5bcBbkXg" association="_uy0MhHStEe6vtI5bcBbkXg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_usVKAHStEe6vtI5bcBbkXg" name="controler">
        <packagedElement xmi:type="uml:Class" xmi:id="_utQXE3StEe6vtI5bcBbkXg" name="ConnexionDB">
          <ownedAttribute xmi:id="_uyCwcHStEe6vtI5bcBbkXg" name="conn" visibility="private" type="_uxy40HStEe6vtI5bcBbkXg" association="_uyqbgHStEe6vtI5bcBbkXg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj4HStEe6vtI5bcBbkXg" name="ConnexionDB" specification="_utSMQHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyaj4XStEe6vtI5bcBbkXg" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj4nStEe6vtI5bcBbkXg" name="user">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj43StEe6vtI5bcBbkXg" name="password">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj5HStEe6vtI5bcBbkXg" type="_utQXE3StEe6vtI5bcBbkXg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
         Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);&#xD;
&#xD;
         // connexion&#xD;
         conn = DriverManager.getConnection(url, user, password);&#xD;
     } catch (ClassNotFoundException | SQLException e) {&#xD;
         System.err.println(&quot;Erreur connexion : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj5XStEe6vtI5bcBbkXg" name="readQuery" specification="_utSzUHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyaj5nStEe6vtI5bcBbkXg" name="sql">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
         Statement statement = conn.createStatement();&#xD;
&#xD;
         // execute query&#xD;
         ResultSet resultSet = statement.executeQuery(sql);&#xD;
         &#xD;
      // get nb column&#xD;
         ResultSetMetaData metaData = resultSet.getMetaData();&#xD;
         int nbColumn = metaData.getColumnCount();&#xD;
&#xD;
      // display results&#xD;
         while (resultSet.next()) {&#xD;
             for (int i = 1; i &lt;= nbColumn; i++) {&#xD;
                 String resultat = resultSet.getString(i);&#xD;
                 System.out.print(resultat + &quot; &quot;);&#xD;
             }&#xD;
             System.out.println(); //&#xD;
         }&#xD;
     } catch (SQLException e) {&#xD;
         System.err.println(&quot;Erreur d'exécution : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj53StEe6vtI5bcBbkXg" name="insertJoueur" specification="_utSzUnStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyaj6HStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj6XStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj6nStEe6vtI5bcBbkXg" name="dateNaissance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
         // requete paramétrée&#xD;
         String insertSQL = &quot;INSERT INTO joueur (nom, prenom, dateNaissance) VALUES (?, ?, ?)&quot;;&#xD;
         PreparedStatement preparedStatement = conn.prepareStatement(insertSQL);&#xD;
&#xD;
         // associer paramêtres&#xD;
         preparedStatement.setString(1, nom);&#xD;
         preparedStatement.setString(2, prenom);&#xD;
         preparedStatement.setString(3, dateNaissance);&#xD;
&#xD;
         // execute query&#xD;
         preparedStatement.executeUpdate();&#xD;
&#xD;
         System.out.println(&quot;Joueur enregistré&quot;);&#xD;
     } catch (SQLException e) {&#xD;
         System.err.println(&quot;Erreur d'insertion : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj63StEe6vtI5bcBbkXg" name="insertJoueurByScanner" specification="_utTaYXStEe6vtI5bcBbkXg">
            <language>java</language>
            <body>try {&#xD;
         Scanner scanner = new Scanner(System.in);&#xD;
&#xD;
         System.out.print(&quot;Nom du joueur : &quot;);&#xD;
         String nom = scanner.nextLine();&#xD;
&#xD;
         System.out.print(&quot;Prénom du joueur : &quot;);&#xD;
         String prenom = scanner.nextLine();&#xD;
&#xD;
         System.out.print(&quot;Date de naissance (format YYYY-MM-DD) : &quot;);&#xD;
         String dateNaissance = scanner.nextLine();&#xD;
         &#xD;
         System.out.println(&quot;Enregistrer la saisie ? (oui/non)&quot;);&#xD;
         String confirmation = scanner.next();&#xD;
&#xD;
         if (confirmation.equalsIgnoreCase(&quot;oui&quot;)) {&#xD;
             insertJoueur(nom, prenom, dateNaissance);&#xD;
             System.out.println(&quot;Joueur enregistré&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;Enregistrement annulé&quot;);&#xD;
         }&#xD;
&#xD;
     } catch (Exception e) {&#xD;
         System.err.println(&quot;Erreur : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj7HStEe6vtI5bcBbkXg" name="createCompetition" specification="_uxzf4nStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uyaj7XStEe6vtI5bcBbkXg" name="annee">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uyaj7nStEe6vtI5bcBbkXg" name="dateDebut" type="_uxzf4HStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uyaj73StEe6vtI5bcBbkXg" name="dateFin" type="_uxzf4HStEe6vtI5bcBbkXg"/>
            <language>java</language>
            <body>try {&#xD;
         // select last id&#xD;
         String sql = &quot;SELECT MAX(idCompetition) FROM competition&quot;;&#xD;
         Statement statement = conn.createStatement();&#xD;
         ResultSet resultSet = statement.executeQuery(sql);&#xD;
         &#xD;
         int lastID = 0;&#xD;
         if (resultSet.next()) {&#xD;
         	lastID = resultSet.getInt(1);&#xD;
         }&#xD;
&#xD;
         // auto incrémentation du nom de la compétition&#xD;
         String newRISK = &quot;RISK&quot; + (lastID + 1);&#xD;
&#xD;
         // insert de la nouvelle compétition dans la table compétition&#xD;
         String insertSQL = &quot;INSERT INTO Competition (nom, annee, dateDebut, dateFin) VALUES (?, ?, ?, ?)&quot;;&#xD;
         PreparedStatement preparedStatement = conn.prepareStatement(insertSQL);&#xD;
&#xD;
         preparedStatement.setString(1, newRISK);&#xD;
         preparedStatement.setInt(2, annee);&#xD;
         preparedStatement.setDate(3, dateDebut);&#xD;
         preparedStatement.setDate(4, dateFin);&#xD;
&#xD;
         preparedStatement.executeUpdate();&#xD;
&#xD;
         System.out.println(&quot;Compétition créée : &quot; + newRISK);&#xD;
     } catch (SQLException e) {&#xD;
         System.err.println(&quot;Erreur de création de la compétition : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyaj8HStEe6vtI5bcBbkXg" name="closeConnexion" specification="_utTaYnStEe6vtI5bcBbkXg">
            <language>java</language>
            <body>try {&#xD;
         if (conn != null) {&#xD;
             conn.close();&#xD;
             System.out.println(&quot;Fin connexion&quot;);&#xD;
         }&#xD;
     } catch (SQLException e) {&#xD;
         System.err.println(&quot;Erreur de fin de connexion : &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybK8HStEe6vtI5bcBbkXg" name="joueurExiste" specification="_utUBcHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybK8XStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybK8nStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uybK83StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
         String query = &quot;SELECT COUNT(*) FROM joueur WHERE nom = ? AND prenom = ?&quot;;&#xD;
         PreparedStatement preparedStatement = conn.prepareStatement(query);&#xD;
         preparedStatement.setString(1, nom);&#xD;
         preparedStatement.setString(2, prenom);&#xD;
         ResultSet resultSet = preparedStatement.executeQuery();&#xD;
&#xD;
         if (resultSet.next()) {&#xD;
             int count = resultSet.getInt(1);&#xD;
             return count > 0;&#xD;
         }&#xD;
&#xD;
     } catch (SQLException e) {&#xD;
         System.err.println(&quot;Erreur lors de la vérification de l'existence du joueur : &quot; + e.getMessage());&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uybK9HStEe6vtI5bcBbkXg" name="main" specification="_utUBdHStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uybK9XStEe6vtI5bcBbkXg" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uybK9nStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>String url = &quot;jdbc:mysql://localhost:3306/risk&quot;;&#xD;
     String user = &quot;root&quot;;&#xD;
     String password = &quot;&quot;;&#xD;
&#xD;
     ConnexionDB dbRisk = new ConnexionDB(url, user, password);&#xD;
&#xD;
     // insert values&#xD;
     //dbRisk.insertJoueurByScanner();&#xD;
     &#xD;
     // display query&#xD;
     dbRisk.readQuery(&quot;SELECT * FROM joueur&quot;);&#xD;
     &#xD;
     // creation d'équipe&#xD;
     //dbRisk.createEquipe(&quot;Kikou&quot;, 1, 2, 3, 4);&#xD;
&#xD;
     // creation de la compétition&#xD;
     //dbRisk.createCompetition(2023, Date.valueOf(&quot;2023-11-01&quot;), Date.valueOf(&quot;2023-11-30&quot;));&#xD;
     &#xD;
     // display classement&#xD;
     dbRisk.readQuery(&quot;select nom, prenom, score from joueur order by score DESC;&quot;);&#xD;
     &#xD;
     // close connexion&#xD;
     dbRisk.closeConnexion();&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_utSMQHStEe6vtI5bcBbkXg" name="ConnexionDB" method="_uyaj4HStEe6vtI5bcBbkXg">
            <eAnnotations xmi:id="_utSMRHStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_utSMRXStEe6vtI5bcBbkXg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_utSMQXStEe6vtI5bcBbkXg" name="url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utSMQnStEe6vtI5bcBbkXg" name="user">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utSMQ3StEe6vtI5bcBbkXg" name="password">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utSMRnStEe6vtI5bcBbkXg" type="_utQXE3StEe6vtI5bcBbkXg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_utSzUHStEe6vtI5bcBbkXg" name="readQuery" method="_uyaj5XStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utSzUXStEe6vtI5bcBbkXg" name="sql">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utSzUnStEe6vtI5bcBbkXg" name="insertJoueur" method="_uyaj53StEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utSzU3StEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utSzVHStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utTaYHStEe6vtI5bcBbkXg" name="dateNaissance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utTaYXStEe6vtI5bcBbkXg" name="insertJoueurByScanner" method="_uyaj63StEe6vtI5bcBbkXg"/>
          <ownedOperation xmi:id="_utTaYnStEe6vtI5bcBbkXg" name="closeConnexion" method="_uyaj8HStEe6vtI5bcBbkXg"/>
          <ownedOperation xmi:id="_utUBcHStEe6vtI5bcBbkXg" name="joueurExiste" method="_uybK8HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utUBcXStEe6vtI5bcBbkXg" name="nom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utUBcnStEe6vtI5bcBbkXg" name="prenom">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_utUBc3StEe6vtI5bcBbkXg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_utUBdHStEe6vtI5bcBbkXg" name="main" isStatic="true" method="_uybK9HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_utUBdXStEe6vtI5bcBbkXg" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utUBdnStEe6vtI5bcBbkXg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_uxzf4nStEe6vtI5bcBbkXg" name="createCompetition" method="_uyaj7HStEe6vtI5bcBbkXg">
            <ownedParameter xmi:id="_uxzf43StEe6vtI5bcBbkXg" name="annee">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_uxzf5HStEe6vtI5bcBbkXg" name="dateDebut" type="_uxzf4HStEe6vtI5bcBbkXg"/>
            <ownedParameter xmi:id="_uxzf5XStEe6vtI5bcBbkXg" name="dateFin" type="_uxzf4HStEe6vtI5bcBbkXg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uyqbgHStEe6vtI5bcBbkXg" name="" memberEnd="_uyqbgXStEe6vtI5bcBbkXg _uyCwcHStEe6vtI5bcBbkXg">
          <ownedEnd xmi:id="_uyqbgXStEe6vtI5bcBbkXg" name="" type="_utQXE3StEe6vtI5bcBbkXg" association="_uyqbgHStEe6vtI5bcBbkXg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_utNTwHStEe6vtI5bcBbkXg" name="MainForTesting">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyW5gHStEe6vtI5bcBbkXg" name="main" specification="_utPI8HStEe6vtI5bcBbkXg">
          <ownedParameter xmi:id="_uyW5gXStEe6vtI5bcBbkXg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyW5gnStEe6vtI5bcBbkXg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// Creation du plateau (objets continents et territoires)
     Monde monde = new Monde();
     ArrayList&lt;Territoire> territoires = monde.getTerritoires();//              &lt;======== ajouter la var territoires en input @raph 
     
     // INITIALISATION D'UNE MANCHE
	    /** Deb - A supprimer apres test*/
		String dn = &quot;2020-10-10&quot;;

		Joueur j1 = new Joueur(&quot;1&quot;, &quot;AA&quot;, &quot;aa&quot;, dn, monde.getMonde(), &quot;jaunes&quot;);
		Joueur j2 = new Joueur(&quot;2&quot;, &quot;BB&quot;, &quot;bb&quot;, dn, monde.getMonde(), &quot;rouges&quot;);
		Joueur j3 = new Joueur(&quot;3&quot;, &quot;CC&quot;, &quot;cc&quot;, dn, monde.getMonde(), &quot;bleues&quot;);
		Joueur j4 = new Joueur(&quot;4&quot;, &quot;DD&quot;, &quot;dd&quot;, dn, monde.getMonde(), &quot;noires&quot;);
		Joueur j5 = new Joueur(&quot;5&quot;, &quot;EE&quot;, &quot;ee&quot;, dn, monde.getMonde(), &quot;violettes&quot;);
		Joueur j6 = new Joueur(&quot;6&quot;, &quot;FF&quot;, &quot;ff&quot;, dn, monde.getMonde(), &quot;vertes&quot;);

		Joueur[] participants = {j1, j2, j3, j4, j5, j6};
 	j1.ajouterTerritoiresConquis(monde.getTerritoires().get(0));
 	monde.getTerritoires().get(0).setOccupant(j1);
 	monde.getTerritoires().get(0).ajouterNbRegiments(4);
 	// Check combat classique ...
 	j2.ajouterTerritoiresConquis(monde.getTerritoires().get(1));
 	monde.getTerritoires().get(1).setOccupant(j2);
 	monde.getTerritoires().get(1).ajouterNbRegiments(3);
 	// Check si plus de troupes dutout => ....
 	j3.ajouterTerritoiresConquis(monde.getTerritoires().get(2));
 	monde.getTerritoires().get(2).setOccupant(j3);
 	monde.getTerritoires().get(2).ajouterNbRegiments(1);
 	
		/** ATTRIBUTION DES CARTES OBJECTIFS AUX JOUEURS */
		//MÃ©langer les cartes de mission æ‰“ä¹±å�¡ç‰Œ
		Mission m = new Mission();
		Collections.shuffle(m.getMissionListe(), new Random());
		
		//Distribution des cartes de mission aux joueurs éš�æœºåˆ†é…�ä»»åŠ¡å�¡ç‰Œç»™çŽ©å®¶
		for(int i=0;i&lt;participants.length;i++) {
			participants[i].DistribuerRandomMission(m.getMissionListe());
		}
		
		Joueur joueur = j1;
		Territoire territoireAttaquant = monde.getTerritoires().get(0);
		Territoire territoireDefenseur = monde.getTerritoires().get(2);
		int nbRegimentsAttaque = 3;
		int nbRegimentsRiposte = 2;    
     
		////// TEST ATTAQUE /////
		
//		/** @Raph Demander choix pays attaquant, pays attaquÃ©, nombre de troupes 
//		 *  Output : territoireAttaquant, territoireDefenseur, nbRegimentsAttaque
//		 */
//		Conflit conflit = new Conflit(joueur, territoireAttaquant, territoireDefenseur, nbRegimentsAttaque);
//		/** @Raph Demander defenseur nb de troupes riposte
//		 *  Input : conflit.getBlablabla...
//		 *  Output : nbRegimentsRiposte
//		 */
//		conflit.resultatConflit(nbRegimentsRiposte);
		
		////// TEST ATTAQUE /////
		
//		joueur = j6;
//		joueur.setCurrentmission(&quot;Vous devez conquérir en totalité l'Europe et l'Amérique du sud plus un troisième continent au choix.&quot;);
//		for (Continent continent : monde.getMonde()) {
//			for (Territoire territoire : continent.getTerritoires()) {
//				if (continent.getNom().equals(&quot;Asie&quot;) || continent.getNom().equals(&quot;Amerique du Sud&quot;) || continent.getNom().equals(&quot;Europe&quot;)) {
//					joueur.ajouterTerritoiresConquis(territoire);
//				}
//			}
//		}
		joueur = j6;
		joueur.setCurrentmission(&quot;Vous devez conquérir 24 territoires aux choix.&quot;);
		for (Continent continent : monde.getMonde()) {
		    for (Territoire territoire : continent.getTerritoires()) {
		        if (continent.getNom().equals(&quot;Asie&quot;) || continent.getNom().equals(&quot;Amerique du Nord&quot;) || continent.getNom().equals(&quot;Europe&quot;)) {
		            joueur.ajouterTerritoiresConquis(territoire);
		        }
		    }
		}
		System.out.println(joueur.consulterContinentsEntierementOccupes());

     // Si le joueur a complÃ©tÃ© son objectif
     joueur.MissionReussie(participants); // check dans test_Main avant d'insérer
     Boolean isObjectifCompleted = joueur.getMissionAchievement();
     if (isObjectifCompleted == true) {
    	 System.out.println(&quot;FIN PARTIE, OBJETCIF COMPLETE PAR &quot;+joueur+&quot; : \n&quot;+joueur.getCurrentmission());
     }
     
     // Si le joueur a remportÃ© tous les territoires
     int nbTerritoiresConquis = (int) joueur.getAllTerritoires().size();
     if (nbTerritoiresConquis == monde.getNbTerritoireTotal()) {
      System.out.println(&quot;FIN PARTIE, TOUS LES TERRITOIRES CONQUIS PAS &quot;+joueur);
     }
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_utPI8HStEe6vtI5bcBbkXg" name="main" isStatic="true" method="_uyW5gHStEe6vtI5bcBbkXg">
          <ownedParameter xmi:id="_utPI8XStEe6vtI5bcBbkXg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utPwAHStEe6vtI5bcBbkXg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_utPwAXStEe6vtI5bcBbkXg" name="Risk">
        <ownedComment xmi:id="_uyjGwHStEe6vtI5bcBbkXg">
          <body>*</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uyZ80HStEe6vtI5bcBbkXg" name="main" specification="_utQXEHStEe6vtI5bcBbkXg">
          <ownedParameter xmi:id="_uyZ80XStEe6vtI5bcBbkXg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyZ80nStEe6vtI5bcBbkXg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// Creation du plateau (objets continents et territoires)&#xD;
     Monde monde = new Monde();&#xD;
     ArrayList&lt;Territoire> territoires = monde.getTerritoires();//              &lt;======== ajouter la var territoires en input @raph &#xD;
     Fenetre vue = new Fenetre(territoires); // CrÃ©e une instance de Fenetre&#xD;
     &#xD;
     // INITIALISATION D'UNE MANCHE&#xD;
	    /** Deb - A supprimer apres test*/&#xD;
		String dn = &quot;2020-10-10&quot;;&#xD;
&#xD;
		Joueur j1 = new Joueur(&quot;1&quot;, &quot;AA&quot;, &quot;aa&quot;, dn, monde.getMonde(), &quot;jaunes&quot;);&#xD;
		Joueur j2 = new Joueur(&quot;2&quot;, &quot;BB&quot;, &quot;bb&quot;, dn, monde.getMonde(), &quot;rouges&quot;);&#xD;
		Joueur j3 = new Joueur(&quot;3&quot;, &quot;CC&quot;, &quot;cc&quot;, dn, monde.getMonde(), &quot;bleues&quot;);&#xD;
		Joueur j4 = new Joueur(&quot;4&quot;, &quot;DD&quot;, &quot;dd&quot;, dn, monde.getMonde(), &quot;noires&quot;);&#xD;
		Joueur j5 = new Joueur(&quot;5&quot;, &quot;EE&quot;, &quot;ee&quot;, dn, monde.getMonde(), &quot;violettes&quot;);&#xD;
		Joueur j6 = new Joueur(&quot;6&quot;, &quot;FF&quot;, &quot;ff&quot;, dn, monde.getMonde(), &quot;vertes&quot;);&#xD;
&#xD;
		Joueur[] participants = {j1, j2, j3, j4, j5, j6};&#xD;
		&#xD;
		int nbUnitesAjout = 0; //Nombre d'unitÃ©s a ajoutÃ© et enlever&#xD;
	    /** Fin - A supprimer apres test*/&#xD;
		&#xD;
//		// Enregistrement des joueurs dans la base de donnÃ©es&#xD;
//		String url = &quot;jdbc:mysql://localhost:3306/risk&quot;;&#xD;
//        String user = &quot;root&quot;;&#xD;
//        String password = &quot;&quot;;&#xD;
//&#xD;
//        ConnexionDB dbRisk = new ConnexionDB(url, user, password);&#xD;
//        &#xD;
//        for (Joueur joueur : participants) {&#xD;
//            if (!dbRisk.joueurExiste(joueur.getNom(), joueur.getPrenom())) {&#xD;
//                dbRisk.insertJoueur(joueur.getNom(), joueur.getPrenom(), joueur.getDtNaissance());&#xD;
//            } else {&#xD;
//                System.out.println(&quot;Le joueur &quot; + joueur.getNom() + &quot; &quot; + joueur.getPrenom() + &quot; existe dÃ©jÃ .&quot;);&#xD;
//            }&#xD;
//        }&#xD;
		&#xD;
		&#xD;
		/** ATTRIBUTION DES CARTES OBJECTIFS AUX JOUEURS */&#xD;
		//MÃ©langer les cartes de mission æ‰“ä¹±å�¡ç‰Œ&#xD;
		Mission m = new Mission();&#xD;
		// Uniquement les missions de conquetes de continents ou de territoires implémentées (toutes les cartes hors vaincre un joueur)&#xD;
		Collections.shuffle(m.getMissionListe(), new Random());&#xD;
		&#xD;
		//Distribution des cartes de mission aux joueurs éš�æœºåˆ†é…�ä»»åŠ¡å�¡ç‰Œç»™çŽ©å®¶&#xD;
		for(int i=0;i&lt;participants.length;i++) {&#xD;
			participants[i].DistribuerRandomMission(m.getMissionListe());&#xD;
		}&#xD;
	&#xD;
		&#xD;
		/** ATTRIBUTION DES CARTES TERRITOIRES AUX JOUEURS */&#xD;
		// instances rÃ©giment pour infanterie, cavalerie et artillerie&#xD;
		Regiment infanterie = new Regiment(&quot;Infanterie&quot;,1);&#xD;
		Regiment cavalerie = new Regiment(&quot;Cavalerie&quot;,5);&#xD;
		Regiment artilleire = new Regiment(&quot;Artillerie&quot;,10);&#xD;
				&#xD;
		List&lt;String> typesRegiments = new ArrayList&lt;>();&#xD;
     typesRegiments.add(&quot;Infanterie&quot;);&#xD;
     typesRegiments.add(&quot;Cavalerie&quot;);&#xD;
     typesRegiments.add(&quot;Artillerie&quot;);&#xD;
     &#xD;
     List&lt;Carte> cartes = new ArrayList&lt;>();&#xD;
     Random random = new Random();&#xD;
     for (Territoire territoire : territoires) {&#xD;
         int randRegiment = random.nextInt(typesRegiments.size());&#xD;
         String typeRegiment = typesRegiments.get(randRegiment);&#xD;
         cartes.add(new Carte(territoire, typeRegiment));&#xD;
     }&#xD;
&#xD;
     // afficher toutes les cartes&#xD;
     for (Carte carte : cartes) {&#xD;
         System.out.println(&quot;CARTE : Territoire : &quot; + carte.getTerritoire() + &quot;, Type de RÃ©giment : &quot; + carte.getTypeRegiment());&#xD;
     }&#xD;
     &#xD;
     // dÃ©terminer le nombre de personnes Ã  jouer et le nombre de cartes Ã  distribuer par personne&#xD;
     int nbParticipants = participants.length;&#xD;
     System.out.println(nbParticipants);&#xD;
     int carteJoueur = cartes.size() / nbParticipants;&#xD;
     System.out.println(carteJoueur);&#xD;
     // distribution des cartes&#xD;
     Collections.shuffle(cartes);&#xD;
     for (int i = 0; i &lt; nbParticipants; i++) {&#xD;
         List&lt;Carte> mainJoueur = cartes.subList(i * carteJoueur, (i + 1) * carteJoueur);&#xD;
         System.out.println(&quot;Joueur &quot; + (i + 1) + &quot; a reÃ§u les cartes : &quot; + mainJoueur);&#xD;
         // Mise Ã  jour des data &#xD;
         for (Carte carte : mainJoueur) {&#xD;
         	participants[i].ajouterTerritoiresConquis(carte.getTerritoire());&#xD;
         	participants[i].enleverNbRegimentsRestants(1);&#xD;
         	carte.getTerritoire().ajouterNbRegiments(1);&#xD;
         	carte.getTerritoire().setOccupant(participants[i]);&#xD;
         	System.out.println(&quot;liste territoire :&quot;+participants[i].getAllTerritoires());&#xD;
         	System.out.println(&quot;Nb troupes a placer :&quot;+participants[i].getNbRegimentsRestants());&#xD;
         	System.out.println(&quot;Territoire occupé par :&quot;+carte.getTerritoire().getOccupant()+&quot; , nb de troupes : &quot;+carte.getTerritoire().getNbRegiments());&#xD;
         }&#xD;
     }&#xD;
&#xD;
		/** PREPARATION DE LA GESTION D UNE MANCHE */&#xD;
		// Creation d'une manche &#xD;
		Manche manche1 = new Manche(participants);&#xD;
     System.out.println(manche1.toString());  &#xD;
     &#xD;
     // Determination du joueur qui commencera le tour et oganisation de l'ordre des joueurs dans la manche&#xD;
     LancerDes des = new LancerDes();&#xD;
     int resultatDes = des.lancerDes();&#xD;
     System.out.println(resultatDes);        &#xD;
     manche1.definirOrdreJoueur(resultatDes);&#xD;
     System.out.println(manche1.toString());  &#xD;
     System.out.println(&quot;--------------------------&quot;);  &#xD;
		&#xD;
     &#xD;
     /** LANCEMENT DE LA MANCHE */&#xD;
     // DEBUT DE LA MANCHE&#xD;
      boolean isWinner = false;&#xD;
      boolean isObjectifCompleted = false;&#xD;
&#xD;
      boolean tourPassed = false;&#xD;
      int nbJouer = 0; //On vérifie que tous les joueurs on placé leurs pions&#xD;
&#xD;
&#xD;
      while (isWinner != true) {&#xD;
     	 // POUR CHAQUE JOUEUR&#xD;
     	 int indiceJoueur = 0;&#xD;
     	 for (Joueur joueur : participants) {&#xD;
	        	 System.out.println(&quot;Joueur &quot; + joueur.getNom());&#xD;
	        	 &#xD;
	        	 // INSTANCIATION VARIABLE DE STOCKAGE&#xD;
	        	 // Variable stockant si un nouveau territoire a ete conquis ou non au cours des attaques&#xD;
	        	 Boolean isNouveauTerritoireConquis = false;&#xD;
	        	 // Variable stockant les choix du joueur&#xD;
	        	 String choixAction = &quot;null&quot;; // choix du joueur dans le menu (cf plus bas)&#xD;
     		 String choixDeplacer = &quot;null&quot;; // variable pour stocker si il y a validation des modifications des troupes, si il veut ajouter ou encore retirer de nouvelles troupes &#xD;
     		 &#xD;
	        	 // PLACEMENT DES 20 REGIMENTS POUR LE PREMIER TOUR (7 DEJA PLACES)&#xD;
     		 //Condition pour que les joueurs placent leurs pions sur le premier tour&#xD;
	        	 if (nbJouer != 6) {&#xD;
     			 while (joueur.getNbRegimentsRestants() != 0) {&#xD;
		        		 for (Territoire territoire : joueur.getAllTerritoires()) {&#xD;
		        			 //Affichage de l'ajout d'unitÃ©s sur un territoire retourne le nombre a ajoutÃ©&#xD;
		        			 nbUnitesAjout = vue.premierTour(joueur, territoire);&#xD;
		        			 territoire.ajouterNbRegiments(nbUnitesAjout);&#xD;
		        			 joueur.enleverNbRegimentsRestants(nbUnitesAjout);&#xD;
		        		 } &#xD;
		        	 }&#xD;
     			 nbJouer +=1;&#xD;
	        	 }&#xD;
	        	 // PROCESSUS NORMAL POUR LES AUTRES TOURS&#xD;
	        	 else {&#xD;
			        	 // MISE A JOUR DU NOMBRE DE REGIMENTS QUE PEUT POSITIONNER UN JOUEUR EN DEBUT DE TOUR&#xD;
		        		 // => selon nombre de territoires occupés et de continents complets occupés&#xD;
		        		 int nbRegimentAPlacer = joueur.calculerNbRegimentsAPlacer();&#xD;
		        		 joueur.ajouterNbRegimentsRestants(nbRegimentAPlacer);&#xD;
		        		 System.out.println(&quot;regiment a placer : &quot; + nbRegimentAPlacer);&#xD;
		        		 &#xD;
		        		 &#xD;
			        	 // AJOUT NOUVEAUX REGIMENTS   &#xD;
		        			 while (joueur.getNbRegimentsRestants() != 0) {&#xD;
				        		 for (Territoire territoire : joueur.getAllTerritoires()) {&#xD;
				        			 //Affichage de l'ajout d'unités sur un territoire retourne le nombre a ajouté&#xD;
				        			 nbUnitesAjout = vue.premierTour(joueur, territoire);&#xD;
				        			 territoire.ajouterNbRegiments(nbUnitesAjout);&#xD;
				        			 joueur.enleverNbRegimentsRestants(nbUnitesAjout);&#xD;
				        		 } &#xD;
				        	 }&#xD;
		        		while (!tourPassed) {&#xD;
		        			int choix = vue.tour(joueur); //1 = Déplacer, 2 = Attaquer, 3 = Passer tour&#xD;
		        			if (choix == 1) {&#xD;
		        				&#xD;
		        			}&#xD;
		        			if (choix == 2) {&#xD;
				        		   /** @Raph Demander choix pays attaquant, pays attaquÃ©, nombre de troupes &#xD;
					        			*  OUTPUT : territoireAttaquant, territoireDefenseur, nbRegimentsAttaque&#xD;
					        			*/&#xD;
					        			Territoire territoireAttaquant = vue.attaque(joueur);&#xD;
					        			System.out.println(&quot;Attaquant : &quot;  + territoireAttaquant.getNom());&#xD;
					        			Territoire territoireDefenseur = vue.defense(joueur, territoireAttaquant);&#xD;
					        			System.out.println(&quot;Defenseur : &quot; + territoireDefenseur.getNom());&#xD;
					        			int nbRegimentsAttaque = vue.choisirNbTroupes(joueur, territoireAttaquant, true);&#xD;
					        			int nbRegimentsRiposte = vue.choisirNbTroupes(territoireDefenseur.getOccupant(), territoireDefenseur, false);&#xD;
					        			// Creation du conflit &#xD;
					        			Conflit conflit = new Conflit(joueur, territoireAttaquant, territoireDefenseur, nbRegimentsAttaque);&#xD;
					        			&#xD;
					        			&#xD;
					        			// Resultat du conflit&#xD;
					        			isNouveauTerritoireConquis = conflit.resultatConflit(nbRegimentsRiposte);&#xD;
					        			vue.afficherDes(conflit.getDesAttaque(), conflit.getDesDefense(), territoireAttaquant, territoireDefenseur);&#xD;
					        			&#xD;
					        			vue.afficherResultats(conflit.getTerritoireAttaquant().getNbRegiments(), conflit.getTerritoireDefenseur().getNbRegiments(), territoireAttaquant, territoireDefenseur);&#xD;
					        			&#xD;
					        			&#xD;
		        			}&#xD;
		        			if (choix == 3) {&#xD;
		        				tourPassed = true;&#xD;
		        			}&#xD;
		        		}&#xD;
	        		&#xD;
		        	 &#xD;
		        	 // CHOIX D ATTAQUER, MODIFIER SES TROUPES OU PASSER SON TOUR&#xD;
		        	 // Tant que le tour du joueur n'est pas fini (continuer d'attaquer), on affiche la fenetre des choix &#xD;
		        	 while (choixAction == &quot;Attaquer&quot;) {&#xD;
			        	 /** @Raph BESOIN - Modifier ta methode choixJoueur pour qu'elle retourne le choix du joueur&#xD;
			        	  *  Genre string &quot;Attaquer&quot;, &quot;DÃ©placer&quot; ou &quot;Passer tour&quot;  par exeple &#xD;
			        	  *  OUTPUT : choixAction &#xD;
			        	  */&#xD;
		        			&#xD;
		        		 // LANCER UNE ATTAQUE&#xD;
				            /** @Kun / @Yujie integrer dans le code : Si nouveau territoire conquis => isNouveauTerritoireConquis = true;*/&#xD;
		        		 // Si le joueur clique sur l'option d'attaquer, il choisie le territoire d'attaque, de defense et le nombre de regiments pour attaquer&#xD;
		        		 if (choixAction == &quot;Attaquer&quot;) {&#xD;
			        		   /** @Raph Demander choix pays attaquant, pays attaquÃ©, nombre de troupes &#xD;
			        			*  OUTPUT : territoireAttaquant, territoireDefenseur, nbRegimentsAttaque&#xD;
			        			*/&#xD;
		        			 	Territoire territoireAttaquant = vue.attaque(joueur);&#xD;
			        			Territoire territoireDefenseur = vue.defense(joueur, territoireAttaquant);&#xD;
			        			int nbRegimentsAttaque = vue.choisirNbTroupes(joueur, territoireAttaquant, true); //true pour attaquant&#xD;
			        			int nbRegimentsRiposte = vue.choisirNbTroupes(territoireDefenseur.getOccupant(), territoireDefenseur, false); //false pour défenseur&#xD;
			        			// Creation du conflit &#xD;
			        			Conflit conflit = new Conflit(joueur, territoireAttaquant, territoireDefenseur, nbRegimentsAttaque);&#xD;
			        			/** @Raph Demander defenseur nb de troupes riposte&#xD;
			        			 *  Input : conflit.getBlablabla...&#xD;
			        			 *  Output : nbRegimentsRiposte&#xD;
			        			 */&#xD;
			        			// Resultat du conflit&#xD;
			        			isNouveauTerritoireConquis = conflit.resultatConflit(nbRegimentsRiposte);&#xD;
&#xD;
			        			&#xD;
		        		 }&#xD;
		        		 // DEPLACER CERTAINS DE SES REGIMENTS&#xD;
		        		 // Si le joueur clique sur l'option deplacer, il choisie autant de deplacement qu'il souhaite (tant que les territoires sont voisins)&#xD;
		        		 // Lorsque qu'il valide les changements, son tour est automatiquement terminÃ©&#xD;
			        	 /** @Raph BESOIN - Modifier ta methode choixJoueur pour qu'elle retourne le choix du joueur&#xD;
			        	  *  Genre string &quot;Attaquer&quot;, &quot;DÃ©placer&quot; ou &quot;Passer tour&quot; c'est impec :)&#xD;
			        	  */&#xD;
		        		 else if (choixAction == &quot;Déplacer&quot;) {&#xD;
		        			while (choixDeplacer != &quot;Valider&quot;) {&#xD;
		        				/** @Raph choix joueur AJOUTER ou RETIRER (a chaque fin de choix si faisable) ou VALIDER&#xD;
		        				 * => AJOUTER : territoire + nb regiments&#xD;
		        				 *    OUTPUT : nbRegiments&#xD;
		        				 * => RETIRER : territoire + nb regiments&#xD;
		        				 *    OUTPUT : nbRegiments&#xD;
		        				 *  >> Rappel conditions : &#xD;
		        				 *  - joueur occupe le territoire (cf Territoire.occupant == Joueur)&#xD;
		        				 *  - pour le RETRAIT de troupes : nb de troupes retirÃ©es &lt;= nb de troupes presentes (cd Territoire.nbRegiments)&#xD;
		        				 *  - pour l'AJOUT : nb de troupes en stock >= nb de troupe Ã  ajouter &#xD;
		        				 *  - pour VALIDER : nb de troupes en stock == 0 ? (franchement optionnel ahah, au pire le joueur prend de l'avance hein)&#xD;
		        				 *  - pays voisins mais un peu relou :/&#xD;
		        				 */ &#xD;
		        				&#xD;
		        				// Choix d'AJOUTER des regiments&#xD;
		        				if (choixDeplacer == &quot;Ajouter&quot;) {&#xD;
			        				Territoire territoireModifie = monde.getTerritoires().get(0);	// A modifier (pour test)&#xD;
			        				int nbRegiments = 1;											// A modifier (pour test)&#xD;
			        				&#xD;
			        				joueur.enleverNbRegimentsRestants(nbRegiments);&#xD;
			        				territoireModifie.ajouterNbRegiments(nbRegiments);&#xD;
		        				}&#xD;
			        			// Choix d'ENLEVER des regiments&#xD;
		        				else if (choixDeplacer == &quot;Retirer&quot;) {&#xD;
			        				Territoire territoireModifie = monde.getTerritoires().get(0);	// A modifier (pour test)&#xD;
			        				int nbRegiments = 1;											// A modifier (pour test)&#xD;
			        				&#xD;
			        				joueur.ajouterNbRegimentsRestants(nbRegiments);&#xD;
			        				territoireModifie.enleverNbRegiments(nbRegiments);&#xD;
			        				&#xD;
			        				// Si le joueur a retirÃ© toutes ses troupes d'un territoire on met Ã  jour les data&#xD;
			        				if (territoireModifie.getNbRegiments() == 0) {&#xD;
			        					joueur.supprimerTerritoiresConquis(territoireModifie);&#xD;
			        					territoireModifie.setOccupant(null);&#xD;
			        				}&#xD;
		        				}&#xD;
		        			}&#xD;
		        		 }&#xD;
		        	 }&#xD;
	        	 }&#xD;
		         // Si le joueur a remportÃ© tous les territoires&#xD;
		         int nbTerritoiresConquis = (int) joueur.getAllTerritoires().size();&#xD;
		         if (nbTerritoiresConquis == monde.getNbTerritoireTotal()) {&#xD;
		        	 isWinner = true;	&#xD;
		         }&#xD;
		         &#xD;
		         // Si le joueur a complÃ©tÃ© son objectif&#xD;
		         joueur.MissionReussie(participants); // check dans test_Main avant d'insérer&#xD;
		         isObjectifCompleted = joueur.getMissionAchievement();&#xD;
		         if (isObjectifCompleted == true) {&#xD;
		        	 isWinner = true;	&#xD;
		         }&#xD;
		         // Si le joueur n'a plus de territoire il est eliminÃ© &#xD;
		         if (nbTerritoiresConquis == 0) {&#xD;
		        	int nouvelIndiceTableau = 0;&#xD;
		        	// Copie des joueurs dans un tableau Ã  jour (sans le joueur eliminÃ©)&#xD;
		        	Joueur[] participantsMaj = new Joueur[participants.length - 1];&#xD;
		        	for (int k = 0; k &lt; participants.length; k++) {&#xD;
		        	    if (k != indiceJoueur) {&#xD;
		        	    	participantsMaj[nouvelIndiceTableau] = participants[k];&#xD;
		        	    	nouvelIndiceTableau = nouvelIndiceTableau+1;&#xD;
		        	    }&#xD;
		        	}&#xD;
		        	// Mise Ã  jour du tableau des participants&#xD;
		        	participants = participantsMaj;&#xD;
		         }	 &#xD;
		         &#xD;
     	 // Incrementation indice joueur de 1&#xD;
     	 indiceJoueur = indiceJoueur+1;&#xD;
     	 }&#xD;
      }&#xD;
     &#xD;
     //TODO Pour l'actualisation de l'affichage du jouer Ã  qui c'est le tour&#xD;
     //vue.actualiserTour(tour);&#xD;
      &#xD;
      // déterminer classement partie&#xD;
      List&lt;Joueur> classement = new ArrayList&lt;>();&#xD;
      &#xD;
      for (Joueur joueur : participants) {&#xD;
     	    int nombreTerritoires = joueur.getAllTerritoires().size();&#xD;
     	    classement.add(joueur);&#xD;
     	}&#xD;
      &#xD;
      // display classement&#xD;
      System.out.println(&quot;Classement à la fin de la manche :&quot;);&#xD;
&#xD;
      for (int i = 0; i &lt; classement.size(); i++) {&#xD;
          for (int j = i + 1; j &lt; classement.size(); j++) {&#xD;
              if (classement.get(i).getAllTerritoires().size() &lt; classement.get(j).getAllTerritoires().size()) {&#xD;
                  Joueur position = classement.get(i);&#xD;
                  classement.set(i, classement.get(j));&#xD;
                  classement.set(j, position);&#xD;
              }&#xD;
          }&#xD;
          System.out.println(&quot;Le joueur &quot; + classement.get(i).getNom() + &quot; termine à la position &quot; + (i+1) + &quot; avec &quot; + classement.get(i).getAllTerritoires().size() + &quot; territoires.&quot;);&#xD;
      }&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_utQXEHStEe6vtI5bcBbkXg" name="main" isStatic="true" method="_uyZ80HStEe6vtI5bcBbkXg">
          <ownedParameter xmi:id="_utQXEXStEe6vtI5bcBbkXg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utQXEnStEe6vtI5bcBbkXg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_us8OA3StEe6vtI5bcBbkXg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_us8OBHStEe6vtI5bcBbkXg" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_ux9Q4HStEe6vtI5bcBbkXg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ux938XStEe6vtI5bcBbkXg" name="ImageIcon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ux-fAHStEe6vtI5bcBbkXg" name="JLabel"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_uW4ecHStEe6vtI5bcBbkXg">
      <eAnnotations xmi:id="_uW7hwHStEe6vtI5bcBbkXg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_uW8v4HStEe6vtI5bcBbkXg" base_Package="_uPyX8HStEe6vtI5bcBbkXg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_utWdsHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_utV2o3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uteZgHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_utdyc3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_utjSAHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_utiq83StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_utj5EHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_utjSAXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_utm8YnStEe6vtI5bcBbkXg" base_Element="_utm8YHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Annotations xmi:id="_utnjcHStEe6vtI5bcBbkXg" base_Element="_utm8YHStEe6vtI5bcBbkXg">
    <annotations xmi:id="_utnjcXStEe6vtI5bcBbkXg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_uttDAXStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uttDAHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uttqEHStEe6vtI5bcBbkXg" genericsValue="String" base_Element="_uttDAnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uttqEnStEe6vtI5bcBbkXg" genericsValue="String" base_Element="_uttqEXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_utu4MHStEe6vtI5bcBbkXg" genericsValue="Continent" base_Element="_utuRInStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_utvfQHStEe6vtI5bcBbkXg" base_Element="_utu4MXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Annotations xmi:id="_utvfQXStEe6vtI5bcBbkXg" base_Element="_utu4MXStEe6vtI5bcBbkXg">
    <annotations xmi:id="_utvfQnStEe6vtI5bcBbkXg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_utzwsnStEe6vtI5bcBbkXg" base_Element="_utzwsHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Annotations xmi:id="_utzws3StEe6vtI5bcBbkXg" base_Element="_utzwsHStEe6vtI5bcBbkXg">
    <annotations xmi:id="_utzwtHStEe6vtI5bcBbkXg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ut3bFXStEe6vtI5bcBbkXg" genericsValue="String" base_Element="_ut3bFHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Array xmi:id="_ut5QQnStEe6vtI5bcBbkXg" base_Element="_ut4pNXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ut5QRnStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_ut5QRXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ut53UnStEe6vtI5bcBbkXg" base_Element="_ut53UHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Annotations xmi:id="_ut53U3StEe6vtI5bcBbkXg" base_Element="_ut53UHStEe6vtI5bcBbkXg">
    <annotations xmi:id="_ut53VHStEe6vtI5bcBbkXg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ut86onStEe6vtI5bcBbkXg" base_Element="_ut86oHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Annotations xmi:id="_ut86o3StEe6vtI5bcBbkXg" base_Element="_ut86oHStEe6vtI5bcBbkXg">
    <annotations xmi:id="_ut86pHStEe6vtI5bcBbkXg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ut-v0XStEe6vtI5bcBbkXg" base_Element="_ut-v0HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxO4IHStEe6vtI5bcBbkXg" base_Element="_uxOREHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxPfMHStEe6vtI5bcBbkXg" base_Element="_uxO4IXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxPfMnStEe6vtI5bcBbkXg" base_Element="_uxPfMXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxQGQXStEe6vtI5bcBbkXg" base_Element="_uxQGQHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxQtUXStEe6vtI5bcBbkXg" base_Element="_uxQtUHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxQtU3StEe6vtI5bcBbkXg" base_Element="_uxQtUnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxRUYHStEe6vtI5bcBbkXg" base_Element="_uxQtVHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxRUYnStEe6vtI5bcBbkXg" base_Element="_uxRUYXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxR7cHStEe6vtI5bcBbkXg" base_Element="_uxRUY3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxR7cnStEe6vtI5bcBbkXg" base_Element="_uxR7cXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxXbAHStEe6vtI5bcBbkXg" base_Element="_uxWz9nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxXbAnStEe6vtI5bcBbkXg" base_Element="_uxXbAXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxevwHStEe6vtI5bcBbkXg" base_Element="_uxeIsHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxfW0HStEe6vtI5bcBbkXg" base_Element="_uxevwXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxf94HStEe6vtI5bcBbkXg" base_Element="_uxfW0XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxnSoHStEe6vtI5bcBbkXg" base_Element="_uxmrkHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxnSonStEe6vtI5bcBbkXg" base_Element="_uxnSoXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxnSpHStEe6vtI5bcBbkXg" base_Element="_uxnSo3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxn5sHStEe6vtI5bcBbkXg" base_Element="_uxnSpXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxn5snStEe6vtI5bcBbkXg" base_Element="_uxn5sXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxogwHStEe6vtI5bcBbkXg" base_Element="_uxn5s3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxy40XStEe6vtI5bcBbkXg" base_Element="_uxy40HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uxzf4XStEe6vtI5bcBbkXg" base_Element="_uxzf4HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux1VEnStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux1VEHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux18IXStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux1VEXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux2jMXStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux18JXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux2jMnStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux18JnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux4YZHStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_ux4YYHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux6NkHStEe6vtI5bcBbkXg" genericsValue="Continent" base_Element="_ux5mhXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux6Nk3StEe6vtI5bcBbkXg" genericsValue="String" base_Element="_ux6NknStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_ux938HStEe6vtI5bcBbkXg" base_Element="_ux9Q4HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_ux938nStEe6vtI5bcBbkXg" base_Element="_ux938XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_ux-fAXStEe6vtI5bcBbkXg" base_Element="_ux-fAHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux_GE3StEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_ux-fA3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux_tIHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux_GFXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_ux_tIXStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_ux_GFnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyAUMnStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uyAUMXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyDXgHStEe6vtI5bcBbkXg" base_Element="_uyCwcHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyDXgnStEe6vtI5bcBbkXg" base_Element="_uyDXgXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyD-k3StEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyD-knStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyElo3StEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyElonStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyElpHStEe6vtI5bcBbkXg" base_Element="_uyElonStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyFMsHStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyElpXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFMsXStEe6vtI5bcBbkXg" base_Element="_uyElpXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFMs3StEe6vtI5bcBbkXg" base_Element="_uyFMsnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFMtXStEe6vtI5bcBbkXg" base_Element="_uyFMtHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFzwHStEe6vtI5bcBbkXg" base_Element="_uyFMt3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFzwnStEe6vtI5bcBbkXg" base_Element="_uyFzwXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyFzxHStEe6vtI5bcBbkXg" base_Element="_uyFzw3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyFzxnStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyFzxXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyGa03StEe6vtI5bcBbkXg" base_Element="_uyGa0nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyGa1nStEe6vtI5bcBbkXg" base_Element="_uyGa1XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyHo8HStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyHB5nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyHo8nStEe6vtI5bcBbkXg" genericsValue="Integer" base_Element="_uyHo8XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyIQAnStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uyIQAXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Array xmi:id="_uyI3E3StEe6vtI5bcBbkXg" base_Element="_uyI3EXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyI3FnStEe6vtI5bcBbkXg" base_Element="_uyI3FXStEe6vtI5bcBbkXg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_uyJeIXStEe6vtI5bcBbkXg" name="getClassement" method="_uydAJ3StEe6vtI5bcBbkXg">
      <ownedParameter xmi:id="_uyJeI3StEe6vtI5bcBbkXg" type="_uxQtUHStEe6vtI5bcBbkXg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_uyJeIHStEe6vtI5bcBbkXg" genericsValue="Integer,Joueur" base_Element="_uyI3FXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyJeInStEe6vtI5bcBbkXg" genericsValue="Integer, Joueur" base_Element="_uyJeIXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyKFM3StEe6vtI5bcBbkXg" base_Element="_uyKFMnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyKFNnStEe6vtI5bcBbkXg" genericsValue="Continent, ArrayList&lt;Territoire>" base_Element="_uyKFNXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyKsQnStEe6vtI5bcBbkXg" base_Element="_uyKsQXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyKsRHStEe6vtI5bcBbkXg" base_Element="_uyKsQ3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Array xmi:id="_uyKsSXStEe6vtI5bcBbkXg" base_Element="_uyKsR3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyKsS3StEe6vtI5bcBbkXg" base_Element="_uyKsR3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyLTUHStEe6vtI5bcBbkXg" base_Element="_uyKsTHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyLTUnStEe6vtI5bcBbkXg" base_Element="_uyLTUXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyLTVHStEe6vtI5bcBbkXg" base_Element="_uyLTU3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyLTVnStEe6vtI5bcBbkXg" base_Element="_uyLTVXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyLTWHStEe6vtI5bcBbkXg" base_Element="_uyLTV3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyL6YHStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uyLTWXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyL6YnStEe6vtI5bcBbkXg" base_Element="_uyLTWXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyL6ZHStEe6vtI5bcBbkXg" base_Element="_uyL6Y3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Array xmi:id="_uyMhc3StEe6vtI5bcBbkXg" base_Element="_uyMhcXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyMhdnStEe6vtI5bcBbkXg" genericsValue="Tour" base_Element="_uyMhdXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyMheHStEe6vtI5bcBbkXg" base_Element="_uyMhd3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyNIhnStEe6vtI5bcBbkXg" genericsValue="Joueur,Joueur" base_Element="_uyNIhXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyNIh3StEe6vtI5bcBbkXg" base_Element="_uyNIhXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyNvkXStEe6vtI5bcBbkXg" base_Element="_uyNvkHStEe6vtI5bcBbkXg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_uyNvk3StEe6vtI5bcBbkXg" name="getClassement" method="_uyfcYHStEe6vtI5bcBbkXg">
      <ownedParameter xmi:id="_uyOWoXStEe6vtI5bcBbkXg" type="_uxQtUHStEe6vtI5bcBbkXg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_uyNvknStEe6vtI5bcBbkXg" genericsValue="Integer,Joueur" base_Element="_uyNvkHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyOWoHStEe6vtI5bcBbkXg" genericsValue="Integer, Joueur" base_Element="_uyNvk3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyOWo3StEe6vtI5bcBbkXg" genericsValue="String" base_Element="_uyOWonStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyOWpXStEe6vtI5bcBbkXg" base_Element="_uyOWonStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyO9sHStEe6vtI5bcBbkXg" base_Element="_uyOWpnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyO9snStEe6vtI5bcBbkXg" genericsValue="Continent" base_Element="_uyO9sXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyO9tnStEe6vtI5bcBbkXg" base_Element="_uyO9tHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyPkwXStEe6vtI5bcBbkXg" base_Element="_uyPkwHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyPkxHStEe6vtI5bcBbkXg" base_Element="_uyPkw3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyPkx3StEe6vtI5bcBbkXg" base_Element="_uyPkxnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyPkyXStEe6vtI5bcBbkXg" base_Element="_uyPkyHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyQL0XStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uyQL0HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyQL1HStEe6vtI5bcBbkXg" base_Element="_uyQL03StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uyQy4XStEe6vtI5bcBbkXg" genericsValue="Integer, Archive_Conflit" base_Element="_uyQy4HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyRZ8HStEe6vtI5bcBbkXg" base_Element="_uyQy5HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyRZ83StEe6vtI5bcBbkXg" base_Element="_uyRZ8XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyRZ9nStEe6vtI5bcBbkXg" base_Element="_uyRZ9HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uyRZ-XStEe6vtI5bcBbkXg" base_Element="_uyRZ93StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Generics xmi:id="_uySBAHStEe6vtI5bcBbkXg" genericsValue="Territoire" base_Element="_uyRZ-nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uySBAnStEe6vtI5bcBbkXg" base_Element="_uyRZ-nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uySBBXStEe6vtI5bcBbkXg" base_Element="_uySBA3StEe6vtI5bcBbkXg"/>
  <uml:OpaqueBehavior xmi:id="_uydAJ3StEe6vtI5bcBbkXg" name="getClassement" specification="_uyJeIXStEe6vtI5bcBbkXg">
    <ownedParameter xmi:id="_uydAKHStEe6vtI5bcBbkXg" type="_uxQtUHStEe6vtI5bcBbkXg" direction="return"/>
    <language>java</language>
    <body>return classement;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_uyfcYHStEe6vtI5bcBbkXg" name="getClassement" specification="_uyNvk3StEe6vtI5bcBbkXg">
    <ownedParameter xmi:id="_uyfcYXStEe6vtI5bcBbkXg" type="_uxQtUHStEe6vtI5bcBbkXg" direction="return"/>
    <language>java</language>
    <body>return classement;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_uyqbgnStEe6vtI5bcBbkXg" base_Element="_uyqbgHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyqbhXStEe6vtI5bcBbkXg" base_Element="_uyqbg3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrCkHStEe6vtI5bcBbkXg" base_Element="_uyqbhnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrCk3StEe6vtI5bcBbkXg" base_Element="_uyrCkXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrClnStEe6vtI5bcBbkXg" base_Element="_uyrClHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrpoHStEe6vtI5bcBbkXg" base_Element="_uyrCl3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrpo3StEe6vtI5bcBbkXg" base_Element="_uyrpoXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyrppnStEe6vtI5bcBbkXg" base_Element="_uyrppHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uysQsHStEe6vtI5bcBbkXg" base_Element="_uyrpp3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uysQs3StEe6vtI5bcBbkXg" base_Element="_uysQsXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uys3wHStEe6vtI5bcBbkXg" base_Element="_uysQtHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uys3w3StEe6vtI5bcBbkXg" base_Element="_uys3wXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uys3xnStEe6vtI5bcBbkXg" base_Element="_uys3xHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyte0HStEe6vtI5bcBbkXg" base_Element="_uys3x3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyte03StEe6vtI5bcBbkXg" base_Element="_uyte0XStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyte1nStEe6vtI5bcBbkXg" base_Element="_uyte1HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyuF4nStEe6vtI5bcBbkXg" base_Element="_uyuF4HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyuF5XStEe6vtI5bcBbkXg" base_Element="_uyuF43StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyus8nStEe6vtI5bcBbkXg" base_Element="_uyus8HStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyus9XStEe6vtI5bcBbkXg" base_Element="_uyus83StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyvUAHStEe6vtI5bcBbkXg" base_Element="_uyus9nStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyvUA3StEe6vtI5bcBbkXg" base_Element="_uyvUAXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyvUBnStEe6vtI5bcBbkXg" base_Element="_uyvUBHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyv7EHStEe6vtI5bcBbkXg" base_Element="_uyvUB3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyv7E3StEe6vtI5bcBbkXg" base_Element="_uyv7EXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uywiIHStEe6vtI5bcBbkXg" base_Element="_uyv7FHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uywiI3StEe6vtI5bcBbkXg" base_Element="_uywiIXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uywiJnStEe6vtI5bcBbkXg" base_Element="_uywiJHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyxJMnStEe6vtI5bcBbkXg" base_Element="_uyxJMHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyxJNXStEe6vtI5bcBbkXg" base_Element="_uyxJM3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyxwQHStEe6vtI5bcBbkXg" base_Element="_uyxJNnStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyxwQ3StEe6vtI5bcBbkXg" base_Element="_uyxwQXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyxwRnStEe6vtI5bcBbkXg" base_Element="_uyxwRHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyyXUHStEe6vtI5bcBbkXg" base_Element="_uyxwR3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyyXU3StEe6vtI5bcBbkXg" base_Element="_uyyXUXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyy-YHStEe6vtI5bcBbkXg" base_Element="_uyyXVHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyy-Y3StEe6vtI5bcBbkXg" base_Element="_uyy-YXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyzlcHStEe6vtI5bcBbkXg" base_Element="_uyy-ZHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyzlc3StEe6vtI5bcBbkXg" base_Element="_uyzlcXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uyzldnStEe6vtI5bcBbkXg" base_Element="_uyzldHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uy0MgHStEe6vtI5bcBbkXg" base_Element="_uyzld3StEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uy0Mg3StEe6vtI5bcBbkXg" base_Element="_uy0MgXStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Reference xmi:id="_uy0MhnStEe6vtI5bcBbkXg" base_Element="_uy0MhHStEe6vtI5bcBbkXg"/>
  <UMLLabProfile:Patch xmi:id="_wBSKwHStEe6vtI5bcBbkXg" base_Element="_ut-v0HStEe6vtI5bcBbkXg" patchText="@@ -42,10 +42,8 @@&#xA; ment&#xA;-()&#xA;  %7B%0A &#xA;" conflicting="false"/>
</xmi:XMI>
